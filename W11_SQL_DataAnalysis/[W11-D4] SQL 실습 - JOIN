{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"[W11-D4] SQL 실습 - JOIN","provenance":[{"file_id":"15_DN3jvdjL5GDBrseGM75pv4GyzMPsV1","timestamp":1625756447642},{"file_id":"1TSJg9CYEifPL7ahul6IJ1Sp4Uo1Nf5Yf","timestamp":1624460704544},{"file_id":"11K4OAa5Ll8iuJPvvXrqbPtuyLAdCBs5w","timestamp":1624460353542},{"file_id":"17XaqEmmImTU_d0rVZz318icfM68zUecg","timestamp":1622937729377},{"file_id":"1xM-5HhFTmrVBsgSp8zg8AqZ0E0zlbNdP","timestamp":1619977811091}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"EVuF1_D9zWBV"},"source":["**환경 설정**"]},{"cell_type":"code","metadata":{"id":"wOS9-QY1amnt"},"source":["%load_ext sql"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"XehcNor8a-za","colab":{"base_uri":"https://localhost:8080/","height":89},"executionInfo":{"status":"ok","timestamp":1625814756743,"user_tz":-540,"elapsed":3292,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"f8357298-3e7f-42a4-c33e-068498f08340"},"source":["# ID와 PW를 자신의 환경에 맞게 수정\n","%sql postgresql://guest:Guest1!*@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/psycopg2/__init__.py:144: UserWarning: The psycopg2 wheel package will be renamed from release 2.8; in order to keep installing from binary please use \"pip install psycopg2-binary\" instead. For details see: <http://initd.org/psycopg/docs/install.html#binary-install-from-pypi>.\n","  \"\"\")\n"],"name":"stderr"},{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Connected: guest@dev'"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"markdown","metadata":{"id":"K3wiIYDJ0EE0"},"source":["## JOIN:\n","\n","An SQL JOIN clause is used to combine rows from two or more tables, based on a common field between them.\n","\n","왼쪽 테이블을 LEFT라고 하고 오른쪽 테이블을 RIGHT이라고 하자. JOIN의 결과는 방식에 상관없이 양쪽의 필드를 모두 가진 새로운 테이블을 만들어내게 됨. 조인의 방식에 따라 다음 두 가지가 달라짐:\n","\n","1. 어떤 레코드들이 선택되는지?\n","2. 어떤 필드들이 채워지는지?"]},{"cell_type":"code","metadata":{"id":"_EzSsoC5P_Xm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1625756487428,"user_tz":-540,"elapsed":635,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"333cf99a-b622-4a42-9de1-370d30a7cbb8"},"source":["%%sql\n","\n","-- guest account는 raw_data에 대해 테이블 쓰기 권한 없으므로 에러 발생!\n","DROP TABLE IF EXISTS raw_data.vital;\n","CREATE TABLE raw_data.vital (\n","    UserID int,\n","    VitalID\tint,\n","    Date date,\n","    Weight int\n",");\n","INSERT INTO raw_data.vital VALUES\n","(100,\t1, '2020-01-01', 75),\n","(100, 3, '2020-01-02', 78),\n","(101, 2, '2020-01-01', 90),\n","(101, 4, '2020-01-02', 95); "],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","(psycopg2.ProgrammingError) permission denied for relation vital\n","\n","[SQL: DROP TABLE IF EXISTS raw_data.vital;]\n","(Background on this error at: http://sqlalche.me/e/14/f405)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"LBigrOQmQwVN"},"source":["%%sql\n","\n","DROP TABLE IF EXISTS raw_data.alert;\n","CREATE TABLE raw_data.alert (\n","    AlertID int,\n","    VitalID\tint,\n","    AlertType varchar(32),\n","    Date date,\n","    UserID int\n",");\n","INSERT INTO raw_data.alert VALUES\n"," (1,\t4, 'WeightIncrease', '2020-01-01', 101),\n"," (2, NULL, 'MissingVital', '2020-01-04', 100),\n"," (3, NULL, 'MissingVital', '2020-01-04', 101);"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"0BnFBjaJ9hpp"},"source":["* INNER JOIN\n","1. 양쪽 테이블에서 매치가 되는 레코드들만 리턴함\n","2. 양쪽 테이블의 필드가 모두 채워진 상태로 리턴됨"]},{"cell_type":"code","metadata":{"id":"Md6ab1LvkH_e","colab":{"base_uri":"https://localhost:8080/","height":115},"executionInfo":{"status":"ok","timestamp":1625756582887,"user_tz":-540,"elapsed":629,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"c262efd2-a123-4796-eb02-bdeebd177047"},"source":["%%sql\n","\n","SELECT * FROM raw_data.Vital v\n","JOIN raw_data.Alert a ON v.vitalID = a.vitalID;"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","1 rows affected.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<table>\n","    <thead>\n","        <tr>\n","            <th>userid</th>\n","            <th>vitalid</th>\n","            <th>date</th>\n","            <th>weight</th>\n","            <th>alertid</th>\n","            <th>vitalid_1</th>\n","            <th>alerttype</th>\n","            <th>date_1</th>\n","            <th>userid_1</th>\n","        </tr>\n","    </thead>\n","    <tbody>\n","        <tr>\n","            <td>101</td>\n","            <td>4</td>\n","            <td>2020-01-02</td>\n","            <td>95</td>\n","            <td>1</td>\n","            <td>4</td>\n","            <td>WeightIncrease</td>\n","            <td>2020-01-01</td>\n","            <td>101</td>\n","        </tr>\n","    </tbody>\n","</table>"],"text/plain":["[(101, 4, datetime.date(2020, 1, 2), 95, 1, 4, 'WeightIncrease', datetime.date(2020, 1, 1), 101)]"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"Z4nfr400-T8l"},"source":[" \n","* LEFT JOIN: 왼쪽 테이블의 레코드는 모두 리턴되며 오른쪽 테이블과 매칭이 되는 레코드들의 경우에는 오른쪽 테이블 레코드들의 컬럼들이 채워진 상태로 리턴됨. 매칭이 안되는 왼쪽 테이블 레코드들은 오른쪽 테이블에서 들어오는 필드들은 NULL로 채워짐"]},{"cell_type":"code","metadata":{"id":"icrK4RYLR0VJ","colab":{"base_uri":"https://localhost:8080/","height":178},"executionInfo":{"status":"ok","timestamp":1625756589608,"user_tz":-540,"elapsed":606,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"f428e37d-2687-4644-9ad2-a6c7ed3c43dc"},"source":["%%sql\n","\n","SELECT * FROM raw_data.Vital v\n","LEFT JOIN raw_data.Alert a ON v.vitalID = a.vitalID;"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","4 rows affected.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<table>\n","    <thead>\n","        <tr>\n","            <th>userid</th>\n","            <th>vitalid</th>\n","            <th>date</th>\n","            <th>weight</th>\n","            <th>alertid</th>\n","            <th>vitalid_1</th>\n","            <th>alerttype</th>\n","            <th>date_1</th>\n","            <th>userid_1</th>\n","        </tr>\n","    </thead>\n","    <tbody>\n","        <tr>\n","            <td>100</td>\n","            <td>1</td>\n","            <td>2020-01-01</td>\n","            <td>75</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","        </tr>\n","        <tr>\n","            <td>100</td>\n","            <td>3</td>\n","            <td>2020-01-02</td>\n","            <td>78</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","        </tr>\n","        <tr>\n","            <td>101</td>\n","            <td>2</td>\n","            <td>2020-01-01</td>\n","            <td>90</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","        </tr>\n","        <tr>\n","            <td>101</td>\n","            <td>4</td>\n","            <td>2020-01-02</td>\n","            <td>95</td>\n","            <td>1</td>\n","            <td>4</td>\n","            <td>WeightIncrease</td>\n","            <td>2020-01-01</td>\n","            <td>101</td>\n","        </tr>\n","    </tbody>\n","</table>"],"text/plain":["[(100, 1, datetime.date(2020, 1, 1), 75, None, None, None, None, None),\n"," (100, 3, datetime.date(2020, 1, 2), 78, None, None, None, None, None),\n"," (101, 2, datetime.date(2020, 1, 1), 90, None, None, None, None, None),\n"," (101, 4, datetime.date(2020, 1, 2), 95, 1, 4, 'WeightIncrease', datetime.date(2020, 1, 1), 101)]"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"markdown","metadata":{"id":"BPpasB4e-eqm"},"source":["* FULL JOIN (OUTER JOIN):\n","1. 왼쪽 테이블과 오른쪽 테이블의 모든 레코드들을 리턴함\n","2. 매칭되는 경우에만 양쪽 테이블들의 모든 필드들이 채워진 상태로 리턴됨"]},{"cell_type":"code","metadata":{"id":"HPTTtMttSJXD","colab":{"base_uri":"https://localhost:8080/","height":220},"executionInfo":{"status":"ok","timestamp":1625756593871,"user_tz":-540,"elapsed":640,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"37a7c240-1106-4dae-beb7-dc8a929d8b87"},"source":["%%sql\n","\n","SELECT * FROM raw_data.Vital v\n","FULL JOIN raw_data.Alert a ON v.vitalID = a.vitalID;"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","6 rows affected.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<table>\n","    <thead>\n","        <tr>\n","            <th>userid</th>\n","            <th>vitalid</th>\n","            <th>date</th>\n","            <th>weight</th>\n","            <th>alertid</th>\n","            <th>vitalid_1</th>\n","            <th>alerttype</th>\n","            <th>date_1</th>\n","            <th>userid_1</th>\n","        </tr>\n","    </thead>\n","    <tbody>\n","        <tr>\n","            <td>101</td>\n","            <td>4</td>\n","            <td>2020-01-02</td>\n","            <td>95</td>\n","            <td>1</td>\n","            <td>4</td>\n","            <td>WeightIncrease</td>\n","            <td>2020-01-01</td>\n","            <td>101</td>\n","        </tr>\n","        <tr>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>2</td>\n","            <td>None</td>\n","            <td>MissingVital</td>\n","            <td>2020-01-04</td>\n","            <td>100</td>\n","        </tr>\n","        <tr>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>3</td>\n","            <td>None</td>\n","            <td>MissingVital</td>\n","            <td>2020-01-04</td>\n","            <td>101</td>\n","        </tr>\n","        <tr>\n","            <td>101</td>\n","            <td>2</td>\n","            <td>2020-01-01</td>\n","            <td>90</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","        </tr>\n","        <tr>\n","            <td>100</td>\n","            <td>1</td>\n","            <td>2020-01-01</td>\n","            <td>75</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","        </tr>\n","        <tr>\n","            <td>100</td>\n","            <td>3</td>\n","            <td>2020-01-02</td>\n","            <td>78</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","            <td>None</td>\n","        </tr>\n","    </tbody>\n","</table>"],"text/plain":["[(101, 4, datetime.date(2020, 1, 2), 95, 1, 4, 'WeightIncrease', datetime.date(2020, 1, 1), 101),\n"," (None, None, None, None, 2, None, 'MissingVital', datetime.date(2020, 1, 4), 100),\n"," (None, None, None, None, 3, None, 'MissingVital', datetime.date(2020, 1, 4), 101),\n"," (101, 2, datetime.date(2020, 1, 1), 90, None, None, None, None, None),\n"," (100, 1, datetime.date(2020, 1, 1), 75, None, None, None, None, None),\n"," (100, 3, datetime.date(2020, 1, 2), 78, None, None, None, None, None)]"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"markdown","metadata":{"id":"yao4hVkK-llH"},"source":["* CARTESIAN JOIN (CROSS JOIN): 조인 조건 없이 두 개 테이블의 내용을 모두 조합한 결과 레코드들을 생성"]},{"cell_type":"code","metadata":{"id":"h_AXmdomUBtF","colab":{"base_uri":"https://localhost:8080/","height":346},"executionInfo":{"status":"ok","timestamp":1625756676760,"user_tz":-540,"elapsed":589,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"d2e14d6b-59aa-42e1-e251-2d92d61fd638"},"source":["%%sql\n","\n","SELECT *\n","FROM (\n","    SELECT vitalid  -- 1,2,3,4\n","    FROM raw_data.vital\n",")\n","CROSS JOIN (\n","    SELECT alertid   -- 1,2,3\n","    FROM raw_data.alert\n",");"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","12 rows affected.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<table>\n","    <thead>\n","        <tr>\n","            <th>vitalid</th>\n","            <th>alertid</th>\n","        </tr>\n","    </thead>\n","    <tbody>\n","        <tr>\n","            <td>1</td>\n","            <td>1</td>\n","        </tr>\n","        <tr>\n","            <td>1</td>\n","            <td>2</td>\n","        </tr>\n","        <tr>\n","            <td>1</td>\n","            <td>3</td>\n","        </tr>\n","        <tr>\n","            <td>3</td>\n","            <td>1</td>\n","        </tr>\n","        <tr>\n","            <td>3</td>\n","            <td>2</td>\n","        </tr>\n","        <tr>\n","            <td>3</td>\n","            <td>3</td>\n","        </tr>\n","        <tr>\n","            <td>2</td>\n","            <td>1</td>\n","        </tr>\n","        <tr>\n","            <td>2</td>\n","            <td>2</td>\n","        </tr>\n","        <tr>\n","            <td>2</td>\n","            <td>3</td>\n","        </tr>\n","        <tr>\n","            <td>4</td>\n","            <td>1</td>\n","        </tr>\n","        <tr>\n","            <td>4</td>\n","            <td>2</td>\n","        </tr>\n","        <tr>\n","            <td>4</td>\n","            <td>3</td>\n","        </tr>\n","    </tbody>\n","</table>"],"text/plain":["[(1, 1),\n"," (1, 2),\n"," (1, 3),\n"," (3, 1),\n"," (3, 2),\n"," (3, 3),\n"," (2, 1),\n"," (2, 2),\n"," (2, 3),\n"," (4, 1),\n"," (4, 2),\n"," (4, 3)]"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":346},"id":"NLaJ6ehkTy1Y","executionInfo":{"status":"ok","timestamp":1625756691967,"user_tz":-540,"elapsed":628,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"d574fcfb-9f06-4201-ab87-128f6086320a"},"source":["%%sql\n","\n","SELECT * FROM raw_data.Vital v\n","CROSS JOIN raw_data.Alert a;"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","12 rows affected.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<table>\n","    <thead>\n","        <tr>\n","            <th>userid</th>\n","            <th>vitalid</th>\n","            <th>date</th>\n","            <th>weight</th>\n","            <th>alertid</th>\n","            <th>vitalid_1</th>\n","            <th>alerttype</th>\n","            <th>date_1</th>\n","            <th>userid_1</th>\n","        </tr>\n","    </thead>\n","    <tbody>\n","        <tr>\n","            <td>100</td>\n","            <td>1</td>\n","            <td>2020-01-01</td>\n","            <td>75</td>\n","            <td>1</td>\n","            <td>4</td>\n","            <td>WeightIncrease</td>\n","            <td>2020-01-01</td>\n","            <td>101</td>\n","        </tr>\n","        <tr>\n","            <td>100</td>\n","            <td>3</td>\n","            <td>2020-01-02</td>\n","            <td>78</td>\n","            <td>1</td>\n","            <td>4</td>\n","            <td>WeightIncrease</td>\n","            <td>2020-01-01</td>\n","            <td>101</td>\n","        </tr>\n","        <tr>\n","            <td>101</td>\n","            <td>2</td>\n","            <td>2020-01-01</td>\n","            <td>90</td>\n","            <td>1</td>\n","            <td>4</td>\n","            <td>WeightIncrease</td>\n","            <td>2020-01-01</td>\n","            <td>101</td>\n","        </tr>\n","        <tr>\n","            <td>101</td>\n","            <td>4</td>\n","            <td>2020-01-02</td>\n","            <td>95</td>\n","            <td>1</td>\n","            <td>4</td>\n","            <td>WeightIncrease</td>\n","            <td>2020-01-01</td>\n","            <td>101</td>\n","        </tr>\n","        <tr>\n","            <td>100</td>\n","            <td>1</td>\n","            <td>2020-01-01</td>\n","            <td>75</td>\n","            <td>2</td>\n","            <td>None</td>\n","            <td>MissingVital</td>\n","            <td>2020-01-04</td>\n","            <td>100</td>\n","        </tr>\n","        <tr>\n","            <td>100</td>\n","            <td>3</td>\n","            <td>2020-01-02</td>\n","            <td>78</td>\n","            <td>2</td>\n","            <td>None</td>\n","            <td>MissingVital</td>\n","            <td>2020-01-04</td>\n","            <td>100</td>\n","        </tr>\n","        <tr>\n","            <td>101</td>\n","            <td>2</td>\n","            <td>2020-01-01</td>\n","            <td>90</td>\n","            <td>2</td>\n","            <td>None</td>\n","            <td>MissingVital</td>\n","            <td>2020-01-04</td>\n","            <td>100</td>\n","        </tr>\n","        <tr>\n","            <td>101</td>\n","            <td>4</td>\n","            <td>2020-01-02</td>\n","            <td>95</td>\n","            <td>2</td>\n","            <td>None</td>\n","            <td>MissingVital</td>\n","            <td>2020-01-04</td>\n","            <td>100</td>\n","        </tr>\n","        <tr>\n","            <td>100</td>\n","            <td>1</td>\n","            <td>2020-01-01</td>\n","            <td>75</td>\n","            <td>3</td>\n","            <td>None</td>\n","            <td>MissingVital</td>\n","            <td>2020-01-04</td>\n","            <td>101</td>\n","        </tr>\n","        <tr>\n","            <td>100</td>\n","            <td>3</td>\n","            <td>2020-01-02</td>\n","            <td>78</td>\n","            <td>3</td>\n","            <td>None</td>\n","            <td>MissingVital</td>\n","            <td>2020-01-04</td>\n","            <td>101</td>\n","        </tr>\n","        <tr>\n","            <td>101</td>\n","            <td>2</td>\n","            <td>2020-01-01</td>\n","            <td>90</td>\n","            <td>3</td>\n","            <td>None</td>\n","            <td>MissingVital</td>\n","            <td>2020-01-04</td>\n","            <td>101</td>\n","        </tr>\n","        <tr>\n","            <td>101</td>\n","            <td>4</td>\n","            <td>2020-01-02</td>\n","            <td>95</td>\n","            <td>3</td>\n","            <td>None</td>\n","            <td>MissingVital</td>\n","            <td>2020-01-04</td>\n","            <td>101</td>\n","        </tr>\n","    </tbody>\n","</table>"],"text/plain":["[(100, 1, datetime.date(2020, 1, 1), 75, 1, 4, 'WeightIncrease', datetime.date(2020, 1, 1), 101),\n"," (100, 3, datetime.date(2020, 1, 2), 78, 1, 4, 'WeightIncrease', datetime.date(2020, 1, 1), 101),\n"," (101, 2, datetime.date(2020, 1, 1), 90, 1, 4, 'WeightIncrease', datetime.date(2020, 1, 1), 101),\n"," (101, 4, datetime.date(2020, 1, 2), 95, 1, 4, 'WeightIncrease', datetime.date(2020, 1, 1), 101),\n"," (100, 1, datetime.date(2020, 1, 1), 75, 2, None, 'MissingVital', datetime.date(2020, 1, 4), 100),\n"," (100, 3, datetime.date(2020, 1, 2), 78, 2, None, 'MissingVital', datetime.date(2020, 1, 4), 100),\n"," (101, 2, datetime.date(2020, 1, 1), 90, 2, None, 'MissingVital', datetime.date(2020, 1, 4), 100),\n"," (101, 4, datetime.date(2020, 1, 2), 95, 2, None, 'MissingVital', datetime.date(2020, 1, 4), 100),\n"," (100, 1, datetime.date(2020, 1, 1), 75, 3, None, 'MissingVital', datetime.date(2020, 1, 4), 101),\n"," (100, 3, datetime.date(2020, 1, 2), 78, 3, None, 'MissingVital', datetime.date(2020, 1, 4), 101),\n"," (101, 2, datetime.date(2020, 1, 1), 90, 3, None, 'MissingVital', datetime.date(2020, 1, 4), 101),\n"," (101, 4, datetime.date(2020, 1, 2), 95, 3, None, 'MissingVital', datetime.date(2020, 1, 4), 101)]"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"RTCsJ2aHe6DC"},"source":["SELF JOIN"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"YO_a_7ire27H","executionInfo":{"status":"ok","timestamp":1625756719817,"user_tz":-540,"elapsed":359,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"9e3f5dab-bc85-4841-fc20-5725034fd62e"},"source":["%%sql\n","\n","SELECT * FROM raw_data.Vital v1\n","JOIN raw_data.Vital v2 ON v1.vitalID = v2.vitalID;"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","4 rows affected.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<table>\n","    <thead>\n","        <tr>\n","            <th>userid</th>\n","            <th>vitalid</th>\n","            <th>date</th>\n","            <th>weight</th>\n","            <th>userid_1</th>\n","            <th>vitalid_1</th>\n","            <th>date_1</th>\n","            <th>weight_1</th>\n","        </tr>\n","    </thead>\n","    <tbody>\n","        <tr>\n","            <td>100</td>\n","            <td>1</td>\n","            <td>2020-01-01</td>\n","            <td>75</td>\n","            <td>100</td>\n","            <td>1</td>\n","            <td>2020-01-01</td>\n","            <td>75</td>\n","        </tr>\n","        <tr>\n","            <td>100</td>\n","            <td>3</td>\n","            <td>2020-01-02</td>\n","            <td>78</td>\n","            <td>100</td>\n","            <td>3</td>\n","            <td>2020-01-02</td>\n","            <td>78</td>\n","        </tr>\n","        <tr>\n","            <td>101</td>\n","            <td>2</td>\n","            <td>2020-01-01</td>\n","            <td>90</td>\n","            <td>101</td>\n","            <td>2</td>\n","            <td>2020-01-01</td>\n","            <td>90</td>\n","        </tr>\n","        <tr>\n","            <td>101</td>\n","            <td>4</td>\n","            <td>2020-01-02</td>\n","            <td>95</td>\n","            <td>101</td>\n","            <td>4</td>\n","            <td>2020-01-02</td>\n","            <td>95</td>\n","        </tr>\n","    </tbody>\n","</table>"],"text/plain":["[(100, 1, datetime.date(2020, 1, 1), 75, 100, 1, datetime.date(2020, 1, 1), 75),\n"," (100, 3, datetime.date(2020, 1, 2), 78, 100, 3, datetime.date(2020, 1, 2), 78),\n"," (101, 2, datetime.date(2020, 1, 1), 90, 101, 2, datetime.date(2020, 1, 1), 90),\n"," (101, 4, datetime.date(2020, 1, 2), 95, 101, 4, datetime.date(2020, 1, 2), 95)]"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"markdown","metadata":{"id":"hvCDVS6FeEbz"},"source":["## Boolean과 COALESCE/NULLIF"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":199},"id":"oyffreu1eIi-","executionInfo":{"status":"ok","timestamp":1625814765777,"user_tz":-540,"elapsed":667,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"4dd94a46-e495-4eaa-b229-51fec2d5064b"},"source":["%%sql\n","\n","SELECT *\n","FROM raw_data.boolean_test;"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","5 rows affected.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<table>\n","    <thead>\n","        <tr>\n","            <th>flag</th>\n","        </tr>\n","    </thead>\n","    <tbody>\n","        <tr>\n","            <td>True</td>\n","        </tr>\n","        <tr>\n","            <td>False</td>\n","        </tr>\n","        <tr>\n","            <td>True</td>\n","        </tr>\n","        <tr>\n","            <td>None</td>\n","        </tr>\n","        <tr>\n","            <td>False</td>\n","        </tr>\n","    </tbody>\n","</table>"],"text/plain":["[(True,), (False,), (True,), (None,), (False,)]"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":115},"id":"JeRiUz6bliNP","executionInfo":{"status":"ok","timestamp":1625814787002,"user_tz":-540,"elapsed":258,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"8512b9b9-2e35-4d8a-b832-838b44c35f1a"},"source":["%%sql\n","\n","SELECT\n","    COUNT(CASE WHEN flag = True THEN 1 END) true_cnt1,\n","    COUNT(CASE WHEN flag is True THEN 1 END) true_cnt2,\n","    COUNT(CASE WHEN flag is not False THEN 1 END) not_false_cnt\n","FROM raw_data.boolean_test;"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","1 rows affected.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<table>\n","    <thead>\n","        <tr>\n","            <th>true_cnt1</th>\n","            <th>true_cnt2</th>\n","            <th>not_false_cnt</th>\n","        </tr>\n","    </thead>\n","    <tbody>\n","        <tr>\n","            <td>2</td>\n","            <td>2</td>\n","            <td>3</td>\n","        </tr>\n","    </tbody>\n","</table>"],"text/plain":["[(2, 2, 3)]"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":115},"id":"baK2REb3yZ5m","executionInfo":{"status":"ok","timestamp":1625815015734,"user_tz":-540,"elapsed":699,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"5d09a28b-4f68-43db-83d2-ba852540e95f"},"source":["%%sql\n","\n","SELECT COUNT(1)\n","FROM raw_data.boolean_test\n","WHERE flag is NULL;"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","1 rows affected.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<table>\n","    <thead>\n","        <tr>\n","            <th>count</th>\n","        </tr>\n","    </thead>\n","    <tbody>\n","        <tr>\n","            <td>1</td>\n","        </tr>\n","    </tbody>\n","</table>"],"text/plain":["[(1,)]"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":115},"id":"tQwL05B8ycj0","executionInfo":{"status":"ok","timestamp":1625815022507,"user_tz":-540,"elapsed":701,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"7899aed8-1550-44ed-a382-574d48884f9e"},"source":["%%sql\n","\n","SELECT COUNT(1)\n","FROM raw_data.boolean_test\n","WHERE flag = NULL;"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","1 rows affected.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<table>\n","    <thead>\n","        <tr>\n","            <th>count</th>\n","        </tr>\n","    </thead>\n","    <tbody>\n","        <tr>\n","            <td>0</td>\n","        </tr>\n","    </tbody>\n","</table>"],"text/plain":["[(0,)]"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"markdown","metadata":{"id":"t6Br-EJAqb6A"},"source":["공백이 들어있는 필드이름 혹은 예약된 키워드를 필드이름으로 사용하려면?"]},{"cell_type":"code","metadata":{"id":"1VbDc-uQqdVQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1625815195050,"user_tz":-540,"elapsed":1368,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"1bbff333-8399-4387-8c37-eb7677725ee6"},"source":["%%sql\n","\n","DROP TABLE IF EXISTS adhoc.keeyong_test;\n","CREATE TABLE adhoc.keeyong_test (\n","    group int primary key,\n","    'mailing address' varchar(32)\n",");"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","Done.\n","(psycopg2.ProgrammingError) syntax error at or near \"'mailing address'\"\n","LINE 3:     'mailing address' varchar(32)\n","            ^\n","\n","[SQL: CREATE TABLE adhoc.keeyong_test (\n","    \"group\" int primary key,\n","    'mailing address' varchar(32)\n",");]\n","(Background on this error at: http://sqlalche.me/e/14/f405)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"hSnO7y95q8Cr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1625815052039,"user_tz":-540,"elapsed":1052,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"7f2a63b0-7abf-4a89-fd43-becd53a49568"},"source":["%%sql\n","\n","CREATE TABLE adhoc.keeyong_test (\n","    \"group\" int primary key,\n","    \"mailing address\" varchar(32)\n",");"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","Done.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["[]"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"T8UdmPbbrKOc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1625815103421,"user_tz":-540,"elapsed":1929,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"11357bec-f7cb-45de-ea55-f51cf5ccb143"},"source":["%%sql\n","\n","DROP TABLE IF EXISTS adhoc.keeyong_test_null;\n","CREATE TABLE adhoc.keeyong_test_null (\n","    value int NOT NULL  -- 이 필드는 NULL값을 가질 수 없다\n",");"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","Done.\n","Done.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["[]"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"Plp-USVbrQk0","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"error","timestamp":1625815217063,"user_tz":-540,"elapsed":1053,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"6f38ae46-7a12-4539-cd88-033c9aa0e96f"},"source":["%%sql\n","\n","INSERT INTO adhoc.keeyong_test_null VALUES (NULL);"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n"],"name":"stdout"},{"output_type":"error","ename":"InternalError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mInternalError\u001b[0m                             Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py\u001b[0m in \u001b[0;36m_execute_context\u001b[0;34m(self, dialect, constructor, statement, parameters, execution_options, *args, **kw)\u001b[0m\n\u001b[1;32m   1770\u001b[0m                     self.dialect.do_execute(\n\u001b[0;32m-> 1771\u001b[0;31m                         \u001b[0mcursor\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstatement\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparameters\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcontext\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1772\u001b[0m                     )\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py\u001b[0m in \u001b[0;36mdo_execute\u001b[0;34m(self, cursor, statement, parameters, context)\u001b[0m\n\u001b[1;32m    716\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mdo_execute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcursor\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstatement\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparameters\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcontext\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 717\u001b[0;31m         \u001b[0mcursor\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstatement\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparameters\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    718\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mInternalError\u001b[0m: Cannot insert a NULL value into column value\nDETAIL:  \n  -----------------------------------------------\n  error:  Cannot insert a NULL value into column value\n  code:      8007\n  context:   query execution\n  query:     83808\n  location:  column:1\n  process:   query0_126_83808 [pid=32093]\n  -----------------------------------------------\n\n","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mInternalError\u001b[0m                             Traceback (most recent call last)","\u001b[0;32m<ipython-input-11-f28161e9ffb5>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mget_ipython\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrun_cell_magic\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'sql'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m''\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'\\nINSERT INTO adhoc.keeyong_test_null VALUES (NULL);'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/interactiveshell.py\u001b[0m in \u001b[0;36mrun_cell_magic\u001b[0;34m(self, magic_name, line, cell)\u001b[0m\n\u001b[1;32m   2115\u001b[0m             \u001b[0mmagic_arg_s\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvar_expand\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mline\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstack_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2116\u001b[0m             \u001b[0;32mwith\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbuiltin_trap\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2117\u001b[0;31m                 \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmagic_arg_s\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcell\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2118\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2119\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<decorator-gen-116>\u001b[0m in \u001b[0;36mexecute\u001b[0;34m(self, line, cell, local_ns)\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/magic.py\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(f, *a, **k)\u001b[0m\n\u001b[1;32m    186\u001b[0m     \u001b[0;31m# but it's overkill for just that one bit of state.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    187\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mmagic_deco\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 188\u001b[0;31m         \u001b[0mcall\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    189\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    190\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcallable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<decorator-gen-115>\u001b[0m in \u001b[0;36mexecute\u001b[0;34m(self, line, cell, local_ns)\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/magic.py\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(f, *a, **k)\u001b[0m\n\u001b[1;32m    186\u001b[0m     \u001b[0;31m# but it's overkill for just that one bit of state.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    187\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mmagic_deco\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 188\u001b[0;31m         \u001b[0mcall\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    189\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    190\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcallable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sql/magic.py\u001b[0m in \u001b[0;36mexecute\u001b[0;34m(self, line, cell, local_ns)\u001b[0m\n\u001b[1;32m     93\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     94\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 95\u001b[0;31m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msql\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrun\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrun\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mconn\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparsed\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'sql'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0muser_ns\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     96\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     97\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mresult\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumn_local_vars\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sql/run.py\u001b[0m in \u001b[0;36mrun\u001b[0;34m(conn, sql, config, user_namespace)\u001b[0m\n\u001b[1;32m    338\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    339\u001b[0m                 \u001b[0mtxt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msqlalchemy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msql\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstatement\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 340\u001b[0;31m                 \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mconn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msession\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtxt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0muser_namespace\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    341\u001b[0m             \u001b[0m_commit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mconn\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mconn\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconfig\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mconfig\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    342\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mresult\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mconfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfeedback\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py\u001b[0m in \u001b[0;36mexecute\u001b[0;34m(self, statement, *multiparams, **params)\u001b[0m\n\u001b[1;32m   1260\u001b[0m             )\n\u001b[1;32m   1261\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1262\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mmeth\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmultiparams\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_EMPTY_EXECUTION_OPTS\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1263\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1264\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_execute_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmultiparams\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexecution_options\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sqlalchemy/sql/elements.py\u001b[0m in \u001b[0;36m_execute_on_connection\u001b[0;34m(self, connection, multiparams, params, execution_options, _force)\u001b[0m\n\u001b[1;32m    322\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0m_force\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msupports_execution\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    323\u001b[0m             return connection._execute_clauseelement(\n\u001b[0;32m--> 324\u001b[0;31m                 \u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmultiparams\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexecution_options\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    325\u001b[0m             )\n\u001b[1;32m    326\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py\u001b[0m in \u001b[0;36m_execute_clauseelement\u001b[0;34m(self, elem, multiparams, params, execution_options)\u001b[0m\n\u001b[1;32m   1459\u001b[0m             \u001b[0melem\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1460\u001b[0m             \u001b[0mextracted_params\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1461\u001b[0;31m             \u001b[0mcache_hit\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcache_hit\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1462\u001b[0m         )\n\u001b[1;32m   1463\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mhas_events\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py\u001b[0m in \u001b[0;36m_execute_context\u001b[0;34m(self, dialect, constructor, statement, parameters, execution_options, *args, **kw)\u001b[0m\n\u001b[1;32m   1812\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mBaseException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1813\u001b[0m             self._handle_dbapi_exception(\n\u001b[0;32m-> 1814\u001b[0;31m                 \u001b[0me\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstatement\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparameters\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcursor\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcontext\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1815\u001b[0m             )\n\u001b[1;32m   1816\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py\u001b[0m in \u001b[0;36m_handle_dbapi_exception\u001b[0;34m(self, e, statement, parameters, cursor, context)\u001b[0m\n\u001b[1;32m   1993\u001b[0m             \u001b[0;32melif\u001b[0m \u001b[0mshould_wrap\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1994\u001b[0m                 util.raise_(\n\u001b[0;32m-> 1995\u001b[0;31m                     \u001b[0msqlalchemy_exception\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwith_traceback\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mexc_info\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfrom_\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1996\u001b[0m                 )\n\u001b[1;32m   1997\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sqlalchemy/util/compat.py\u001b[0m in \u001b[0;36mraise_\u001b[0;34m(***failed resolving arguments***)\u001b[0m\n\u001b[1;32m    205\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    206\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 207\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mexception\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    208\u001b[0m         \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    209\u001b[0m             \u001b[0;31m# credit to\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/base.py\u001b[0m in \u001b[0;36m_execute_context\u001b[0;34m(self, dialect, constructor, statement, parameters, execution_options, *args, **kw)\u001b[0m\n\u001b[1;32m   1769\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mevt_handled\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1770\u001b[0m                     self.dialect.do_execute(\n\u001b[0;32m-> 1771\u001b[0;31m                         \u001b[0mcursor\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstatement\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparameters\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcontext\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1772\u001b[0m                     )\n\u001b[1;32m   1773\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py\u001b[0m in \u001b[0;36mdo_execute\u001b[0;34m(self, cursor, statement, parameters, context)\u001b[0m\n\u001b[1;32m    715\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    716\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mdo_execute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcursor\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstatement\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparameters\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcontext\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 717\u001b[0;31m         \u001b[0mcursor\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstatement\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparameters\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    718\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    719\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mdo_execute_no_params\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcursor\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstatement\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcontext\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mInternalError\u001b[0m: (psycopg2.InternalError) Cannot insert a NULL value into column value\nDETAIL:  \n  -----------------------------------------------\n  error:  Cannot insert a NULL value into column value\n  code:      8007\n  context:   query execution\n  query:     83808\n  location:  column:1\n  process:   query0_126_83808 [pid=32093]\n  -----------------------------------------------\n\n\n[SQL: INSERT INTO adhoc.keeyong_test_null VALUES (NULL);]\n(Background on this error at: http://sqlalche.me/e/14/2j85)"]}]},{"cell_type":"markdown","metadata":{"id":"hYNQUGSffj_Y"},"source":["# **숙제 - 1**\n","\n","**채널별 월 매출액 테이블 만들기 (adhoc 스키마 밑에 CTAS로 본인 영문 이름을 포함해서 테이블 만들기)**\n","1.   session_timestamp, user_session_channel, channel, session_transaction 테이블들을 사용\n","\n","2.   아래와 같은 필드로 구성\n","    - month\n","    - channel\n","    - uniqueUsers (총방문 사용자)\n","    - paidUsers (구매 사용자: refund한 경우도 판매로 고려)\n","    - conversionRate (구매사용자 / 총방문 사용자)\n","    - grossRevenue (refund 포함)\n","    - netRevenue (refund 제외)\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"md4r-D0XEtCK"},"source":["**1. 혹시 OUT JOIN이 필요한지, 테이별 점검 필요**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":94},"id":"nuWTElQuAWDS","executionInfo":{"status":"ok","timestamp":1625815253554,"user_tz":-540,"elapsed":643,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"77a83368-9957-4223-8e00-0cc9c2ed7bac"},"source":["%%sql\n","\n","select distinct sessionid from raw_data.session_timestamp\n","minus\n","select distinct sessionid from raw_data.user_session_channel\n",";"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","0 rows affected.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<table>\n","    <thead>\n","        <tr>\n","            <th>sessionid</th>\n","        </tr>\n","    </thead>\n","    <tbody>\n","    </tbody>\n","</table>"],"text/plain":["[]"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":94},"id":"IvG50kOHwRlj","executionInfo":{"status":"ok","timestamp":1625815282741,"user_tz":-540,"elapsed":883,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"dae30dd4-5991-4214-e3c1-450a143ff19d"},"source":["%%sql\n","\n","select distinct sessionid from raw_data.user_session_channel\n","minus\n","select distinct sessionid from raw_data.session_timestamp\n",";"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","0 rows affected.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<table>\n","    <thead>\n","        <tr>\n","            <th>sessionid</th>\n","        </tr>\n","    </thead>\n","    <tbody>\n","    </tbody>\n","</table>"],"text/plain":["[]"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"1Bqls_Bnv4fSB7xdVxyYnmHuacInfyHsP"},"id":"K8ePQq60JX6K","executionInfo":{"status":"ok","timestamp":1625815382738,"user_tz":-540,"elapsed":10367,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"dd23ff59-0473-433f-b7ed-6909eb8d5241"},"source":["%%sql\n","\n","select distinct sessionid from raw_data.user_session_channel\n","minus\n","select distinct sessionid from raw_data.session_transaction\n",";"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"1QWb1UjtzhVjRGPuT5O5fUvKAMUoTkAFt"},"id":"Qzhq1G8UJgUz","executionInfo":{"status":"ok","timestamp":1625815407997,"user_tz":-540,"elapsed":6382,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"9fe5b35d-790a-47a3-c349-5222a490e988"},"source":["%%sql\n","\n","select distinct sessionid from raw_data.user_session_channel\n","minus\n","select distinct sessionid from raw_data.session_transaction\n",";"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":304},"id":"2kCjBrEv0aaq","executionInfo":{"status":"ok","timestamp":1625815328600,"user_tz":-540,"elapsed":666,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"8d4afc6b-5182-4f82-d865-4c97b93aeee1"},"source":["%%sql\n","\n","select * from raw_data.session_transaction\n","where amount <= 0"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","10 rows affected.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<table>\n","    <thead>\n","        <tr>\n","            <th>sessionid</th>\n","            <th>refunded</th>\n","            <th>amount</th>\n","        </tr>\n","    </thead>\n","    <tbody>\n","        <tr>\n","            <td>3d194d58a6470121c92f29c1ee4c936f</td>\n","            <td>False</td>\n","            <td>0</td>\n","        </tr>\n","        <tr>\n","            <td>50aaa83c9c2d1d1f3ebc6c732c1abc8c</td>\n","            <td>False</td>\n","            <td>0</td>\n","        </tr>\n","        <tr>\n","            <td>7fbfc161a3b873bf2119c788ed93d1f4</td>\n","            <td>False</td>\n","            <td>0</td>\n","        </tr>\n","        <tr>\n","            <td>d288a67e5fe3b80c0ccb9531e87d437a</td>\n","            <td>False</td>\n","            <td>0</td>\n","        </tr>\n","        <tr>\n","            <td>dfc95d616451863a4fe614534e08261c</td>\n","            <td>False</td>\n","            <td>0</td>\n","        </tr>\n","        <tr>\n","            <td>297b51d372955449d68d0b67ffda8c80</td>\n","            <td>False</td>\n","            <td>0</td>\n","        </tr>\n","        <tr>\n","            <td>52660fd5af844425740f3a7bf5151008</td>\n","            <td>False</td>\n","            <td>0</td>\n","        </tr>\n","        <tr>\n","            <td>99e17fbe90095024e6c982c85d43d150</td>\n","            <td>False</td>\n","            <td>0</td>\n","        </tr>\n","        <tr>\n","            <td>d572948a93127fa250a9aa8a122a4403</td>\n","            <td>False</td>\n","            <td>0</td>\n","        </tr>\n","        <tr>\n","            <td>e00747f11c12e85717de726cc6c2f188</td>\n","            <td>False</td>\n","            <td>0</td>\n","        </tr>\n","    </tbody>\n","</table>"],"text/plain":["[('3d194d58a6470121c92f29c1ee4c936f', False, 0),\n"," ('50aaa83c9c2d1d1f3ebc6c732c1abc8c', False, 0),\n"," ('7fbfc161a3b873bf2119c788ed93d1f4', False, 0),\n"," ('d288a67e5fe3b80c0ccb9531e87d437a', False, 0),\n"," ('dfc95d616451863a4fe614534e08261c', False, 0),\n"," ('297b51d372955449d68d0b67ffda8c80', False, 0),\n"," ('52660fd5af844425740f3a7bf5151008', False, 0),\n"," ('99e17fbe90095024e6c982c85d43d150', False, 0),\n"," ('d572948a93127fa250a9aa8a122a4403', False, 0),\n"," ('e00747f11c12e85717de726cc6c2f188', False, 0)]"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"markdown","metadata":{"id":"m3eBeKqNKhUt"},"source":["**2. Summary Table 만들기**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":971},"id":"TV3XiMOf0IeA","executionInfo":{"status":"ok","timestamp":1624517004112,"user_tz":420,"elapsed":604,"user":{"displayName":"Keeyong Han","photoUrl":"","userId":"14343263871549548214"}},"outputId":"2e1e6e6a-9b98-499f-891b-4ceac9644304"},"source":["%%sql\n","\n","SELECT LEFT(ts, 7) \"month\",  -- \"year month\"\n","       channel,\n","       COUNT(DISTINCT usc.userid) uniqueUsers,\n","       COUNT(DISTINCT CASE WHEN amount > 0 THEN usc.userid END) paidUsers,\n","       ROUND(paidUsers*100.0/NULLIF(uniqueUsers, 0),2) conversionRate,\n","       SUM(amount) grossRevenue,\n","       SUM(CASE WHEN refunded is False THEN amount END) netRevenue\n","   FROM raw_data.user_session_channel usc\n","   LEFT JOIN raw_data.session_timestamp t ON t.sessionid = usc.sessionid\n","   LEFT JOIN raw_data.session_transaction st ON st.sessionid = usc.sessionid\n","   GROUP BY 1, 2\n","   ORDER BY 1, 2;"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","42 rows affected.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<table>\n","    <thead>\n","        <tr>\n","            <th>month</th>\n","            <th>channel</th>\n","            <th>uniqueusers</th>\n","            <th>paidusers</th>\n","            <th>conversionrate</th>\n","            <th>grossrevenue</th>\n","            <th>netrevenue</th>\n","        </tr>\n","    </thead>\n","    <tbody>\n","        <tr>\n","            <td>2019-05</td>\n","            <td>Facebook</td>\n","            <td>247</td>\n","            <td>14</td>\n","            <td>5.67</td>\n","            <td>1199</td>\n","            <td>997</td>\n","        </tr>\n","        <tr>\n","            <td>2019-05</td>\n","            <td>Google</td>\n","            <td>253</td>\n","            <td>10</td>\n","            <td>3.95</td>\n","            <td>580</td>\n","            <td>580</td>\n","        </tr>\n","        <tr>\n","            <td>2019-05</td>\n","            <td>Instagram</td>\n","            <td>234</td>\n","            <td>11</td>\n","            <td>4.70</td>\n","            <td>959</td>\n","            <td>770</td>\n","        </tr>\n","        <tr>\n","            <td>2019-05</td>\n","            <td>Naver</td>\n","            <td>237</td>\n","            <td>11</td>\n","            <td>4.64</td>\n","            <td>867</td>\n","            <td>844</td>\n","        </tr>\n","        <tr>\n","            <td>2019-05</td>\n","            <td>Organic</td>\n","            <td>238</td>\n","            <td>17</td>\n","            <td>7.14</td>\n","            <td>1846</td>\n","            <td>1571</td>\n","        </tr>\n","        <tr>\n","            <td>2019-05</td>\n","            <td>Youtube</td>\n","            <td>244</td>\n","            <td>9</td>\n","            <td>3.69</td>\n","            <td>529</td>\n","            <td>529</td>\n","        </tr>\n","        <tr>\n","            <td>2019-06</td>\n","            <td>Facebook</td>\n","            <td>414</td>\n","            <td>22</td>\n","            <td>5.31</td>\n","            <td>1578</td>\n","            <td>1578</td>\n","        </tr>\n","        <tr>\n","            <td>2019-06</td>\n","            <td>Google</td>\n","            <td>412</td>\n","            <td>13</td>\n","            <td>3.16</td>\n","            <td>947</td>\n","            <td>947</td>\n","        </tr>\n","        <tr>\n","            <td>2019-06</td>\n","            <td>Instagram</td>\n","            <td>410</td>\n","            <td>21</td>\n","            <td>5.12</td>\n","            <td>1462</td>\n","            <td>1418</td>\n","        </tr>\n","        <tr>\n","            <td>2019-06</td>\n","            <td>Naver</td>\n","            <td>398</td>\n","            <td>15</td>\n","            <td>3.77</td>\n","            <td>1090</td>\n","            <td>1090</td>\n","        </tr>\n","        <tr>\n","            <td>2019-06</td>\n","            <td>Organic</td>\n","            <td>416</td>\n","            <td>14</td>\n","            <td>3.37</td>\n","            <td>1129</td>\n","            <td>940</td>\n","        </tr>\n","        <tr>\n","            <td>2019-06</td>\n","            <td>Youtube</td>\n","            <td>400</td>\n","            <td>17</td>\n","            <td>4.25</td>\n","            <td>1042</td>\n","            <td>1042</td>\n","        </tr>\n","        <tr>\n","            <td>2019-07</td>\n","            <td>Facebook</td>\n","            <td>558</td>\n","            <td>32</td>\n","            <td>5.73</td>\n","            <td>2222</td>\n","            <td>2144</td>\n","        </tr>\n","        <tr>\n","            <td>2019-07</td>\n","            <td>Google</td>\n","            <td>556</td>\n","            <td>21</td>\n","            <td>3.78</td>\n","            <td>1558</td>\n","            <td>1385</td>\n","        </tr>\n","        <tr>\n","            <td>2019-07</td>\n","            <td>Instagram</td>\n","            <td>567</td>\n","            <td>24</td>\n","            <td>4.23</td>\n","            <td>1896</td>\n","            <td>1766</td>\n","        </tr>\n","        <tr>\n","            <td>2019-07</td>\n","            <td>Naver</td>\n","            <td>553</td>\n","            <td>19</td>\n","            <td>3.44</td>\n","            <td>1547</td>\n","            <td>1547</td>\n","        </tr>\n","        <tr>\n","            <td>2019-07</td>\n","            <td>Organic</td>\n","            <td>557</td>\n","            <td>22</td>\n","            <td>3.95</td>\n","            <td>1600</td>\n","            <td>1600</td>\n","        </tr>\n","        <tr>\n","            <td>2019-07</td>\n","            <td>Youtube</td>\n","            <td>564</td>\n","            <td>36</td>\n","            <td>6.38</td>\n","            <td>2210</td>\n","            <td>2037</td>\n","        </tr>\n","        <tr>\n","            <td>2019-08</td>\n","            <td>Facebook</td>\n","            <td>611</td>\n","            <td>18</td>\n","            <td>2.95</td>\n","            <td>1009</td>\n","            <td>1009</td>\n","        </tr>\n","        <tr>\n","            <td>2019-08</td>\n","            <td>Google</td>\n","            <td>610</td>\n","            <td>27</td>\n","            <td>4.43</td>\n","            <td>2210</td>\n","            <td>1894</td>\n","        </tr>\n","        <tr>\n","            <td>2019-08</td>\n","            <td>Instagram</td>\n","            <td>621</td>\n","            <td>28</td>\n","            <td>4.51</td>\n","            <td>2129</td>\n","            <td>2001</td>\n","        </tr>\n","        <tr>\n","            <td>2019-08</td>\n","            <td>Naver</td>\n","            <td>626</td>\n","            <td>22</td>\n","            <td>3.51</td>\n","            <td>1829</td>\n","            <td>1551</td>\n","        </tr>\n","        <tr>\n","            <td>2019-08</td>\n","            <td>Organic</td>\n","            <td>608</td>\n","            <td>26</td>\n","            <td>4.28</td>\n","            <td>1643</td>\n","            <td>1606</td>\n","        </tr>\n","        <tr>\n","            <td>2019-08</td>\n","            <td>Youtube</td>\n","            <td>614</td>\n","            <td>18</td>\n","            <td>2.93</td>\n","            <td>987</td>\n","            <td>950</td>\n","        </tr>\n","        <tr>\n","            <td>2019-09</td>\n","            <td>Facebook</td>\n","            <td>597</td>\n","            <td>27</td>\n","            <td>4.52</td>\n","            <td>2270</td>\n","            <td>2270</td>\n","        </tr>\n","        <tr>\n","            <td>2019-09</td>\n","            <td>Google</td>\n","            <td>599</td>\n","            <td>25</td>\n","            <td>4.17</td>\n","            <td>1872</td>\n","            <td>1691</td>\n","        </tr>\n","        <tr>\n","            <td>2019-09</td>\n","            <td>Instagram</td>\n","            <td>588</td>\n","            <td>20</td>\n","            <td>3.40</td>\n","            <td>1260</td>\n","            <td>1122</td>\n","        </tr>\n","        <tr>\n","            <td>2019-09</td>\n","            <td>Naver</td>\n","            <td>592</td>\n","            <td>21</td>\n","            <td>3.55</td>\n","            <td>1996</td>\n","            <td>1996</td>\n","        </tr>\n","        <tr>\n","            <td>2019-09</td>\n","            <td>Organic</td>\n","            <td>592</td>\n","            <td>22</td>\n","            <td>3.72</td>\n","            <td>1267</td>\n","            <td>1267</td>\n","        </tr>\n","        <tr>\n","            <td>2019-09</td>\n","            <td>Youtube</td>\n","            <td>588</td>\n","            <td>15</td>\n","            <td>2.55</td>\n","            <td>1301</td>\n","            <td>1301</td>\n","        </tr>\n","        <tr>\n","            <td>2019-10</td>\n","            <td>Facebook</td>\n","            <td>698</td>\n","            <td>29</td>\n","            <td>4.15</td>\n","            <td>1650</td>\n","            <td>1641</td>\n","        </tr>\n","        <tr>\n","            <td>2019-10</td>\n","            <td>Google</td>\n","            <td>699</td>\n","            <td>30</td>\n","            <td>4.29</td>\n","            <td>2150</td>\n","            <td>2098</td>\n","        </tr>\n","        <tr>\n","            <td>2019-10</td>\n","            <td>Instagram</td>\n","            <td>707</td>\n","            <td>33</td>\n","            <td>4.67</td>\n","            <td>2568</td>\n","            <td>2395</td>\n","        </tr>\n","        <tr>\n","            <td>2019-10</td>\n","            <td>Naver</td>\n","            <td>713</td>\n","            <td>32</td>\n","            <td>4.49</td>\n","            <td>2695</td>\n","            <td>2695</td>\n","        </tr>\n","        <tr>\n","            <td>2019-10</td>\n","            <td>Organic</td>\n","            <td>709</td>\n","            <td>31</td>\n","            <td>4.37</td>\n","            <td>2762</td>\n","            <td>2608</td>\n","        </tr>\n","        <tr>\n","            <td>2019-10</td>\n","            <td>Youtube</td>\n","            <td>705</td>\n","            <td>34</td>\n","            <td>4.82</td>\n","            <td>2492</td>\n","            <td>2319</td>\n","        </tr>\n","        <tr>\n","            <td>2019-11</td>\n","            <td>Facebook</td>\n","            <td>688</td>\n","            <td>25</td>\n","            <td>3.63</td>\n","            <td>1678</td>\n","            <td>1678</td>\n","        </tr>\n","        <tr>\n","            <td>2019-11</td>\n","            <td>Google</td>\n","            <td>688</td>\n","            <td>26</td>\n","            <td>3.78</td>\n","            <td>2286</td>\n","            <td>2235</td>\n","        </tr>\n","        <tr>\n","            <td>2019-11</td>\n","            <td>Instagram</td>\n","            <td>669</td>\n","            <td>25</td>\n","            <td>3.74</td>\n","            <td>2116</td>\n","            <td>2116</td>\n","        </tr>\n","        <tr>\n","            <td>2019-11</td>\n","            <td>Naver</td>\n","            <td>667</td>\n","            <td>26</td>\n","            <td>3.90</td>\n","            <td>2234</td>\n","            <td>1987</td>\n","        </tr>\n","        <tr>\n","            <td>2019-11</td>\n","            <td>Organic</td>\n","            <td>677</td>\n","            <td>34</td>\n","            <td>5.02</td>\n","            <td>2626</td>\n","            <td>2255</td>\n","        </tr>\n","        <tr>\n","            <td>2019-11</td>\n","            <td>Youtube</td>\n","            <td>677</td>\n","            <td>45</td>\n","            <td>6.65</td>\n","            <td>3532</td>\n","            <td>3331</td>\n","        </tr>\n","    </tbody>\n","</table>"],"text/plain":["[('2019-05', 'Facebook', 247, 14, Decimal('5.67'), 1199, 997),\n"," ('2019-05', 'Google', 253, 10, Decimal('3.95'), 580, 580),\n"," ('2019-05', 'Instagram', 234, 11, Decimal('4.70'), 959, 770),\n"," ('2019-05', 'Naver', 237, 11, Decimal('4.64'), 867, 844),\n"," ('2019-05', 'Organic', 238, 17, Decimal('7.14'), 1846, 1571),\n"," ('2019-05', 'Youtube', 244, 9, Decimal('3.69'), 529, 529),\n"," ('2019-06', 'Facebook', 414, 22, Decimal('5.31'), 1578, 1578),\n"," ('2019-06', 'Google', 412, 13, Decimal('3.16'), 947, 947),\n"," ('2019-06', 'Instagram', 410, 21, Decimal('5.12'), 1462, 1418),\n"," ('2019-06', 'Naver', 398, 15, Decimal('3.77'), 1090, 1090),\n"," ('2019-06', 'Organic', 416, 14, Decimal('3.37'), 1129, 940),\n"," ('2019-06', 'Youtube', 400, 17, Decimal('4.25'), 1042, 1042),\n"," ('2019-07', 'Facebook', 558, 32, Decimal('5.73'), 2222, 2144),\n"," ('2019-07', 'Google', 556, 21, Decimal('3.78'), 1558, 1385),\n"," ('2019-07', 'Instagram', 567, 24, Decimal('4.23'), 1896, 1766),\n"," ('2019-07', 'Naver', 553, 19, Decimal('3.44'), 1547, 1547),\n"," ('2019-07', 'Organic', 557, 22, Decimal('3.95'), 1600, 1600),\n"," ('2019-07', 'Youtube', 564, 36, Decimal('6.38'), 2210, 2037),\n"," ('2019-08', 'Facebook', 611, 18, Decimal('2.95'), 1009, 1009),\n"," ('2019-08', 'Google', 610, 27, Decimal('4.43'), 2210, 1894),\n"," ('2019-08', 'Instagram', 621, 28, Decimal('4.51'), 2129, 2001),\n"," ('2019-08', 'Naver', 626, 22, Decimal('3.51'), 1829, 1551),\n"," ('2019-08', 'Organic', 608, 26, Decimal('4.28'), 1643, 1606),\n"," ('2019-08', 'Youtube', 614, 18, Decimal('2.93'), 987, 950),\n"," ('2019-09', 'Facebook', 597, 27, Decimal('4.52'), 2270, 2270),\n"," ('2019-09', 'Google', 599, 25, Decimal('4.17'), 1872, 1691),\n"," ('2019-09', 'Instagram', 588, 20, Decimal('3.40'), 1260, 1122),\n"," ('2019-09', 'Naver', 592, 21, Decimal('3.55'), 1996, 1996),\n"," ('2019-09', 'Organic', 592, 22, Decimal('3.72'), 1267, 1267),\n"," ('2019-09', 'Youtube', 588, 15, Decimal('2.55'), 1301, 1301),\n"," ('2019-10', 'Facebook', 698, 29, Decimal('4.15'), 1650, 1641),\n"," ('2019-10', 'Google', 699, 30, Decimal('4.29'), 2150, 2098),\n"," ('2019-10', 'Instagram', 707, 33, Decimal('4.67'), 2568, 2395),\n"," ('2019-10', 'Naver', 713, 32, Decimal('4.49'), 2695, 2695),\n"," ('2019-10', 'Organic', 709, 31, Decimal('4.37'), 2762, 2608),\n"," ('2019-10', 'Youtube', 705, 34, Decimal('4.82'), 2492, 2319),\n"," ('2019-11', 'Facebook', 688, 25, Decimal('3.63'), 1678, 1678),\n"," ('2019-11', 'Google', 688, 26, Decimal('3.78'), 2286, 2235),\n"," ('2019-11', 'Instagram', 669, 25, Decimal('3.74'), 2116, 2116),\n"," ('2019-11', 'Naver', 667, 26, Decimal('3.90'), 2234, 1987),\n"," ('2019-11', 'Organic', 677, 34, Decimal('5.02'), 2626, 2255),\n"," ('2019-11', 'Youtube', 677, 45, Decimal('6.65'), 3532, 3331)]"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"KZXR4afJKb1b","executionInfo":{"status":"ok","timestamp":1625815458905,"user_tz":-540,"elapsed":1520,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"0a22b88b-d6fe-473f-fbce-5f0096240a6b"},"source":["%%sql\n","\n","--혹시 기존에 생성되어 있으면 삭제\n","DROP TABLE IF EXISTS adhoc.keeyong_monthly_channel_summary;\n","\n","--Summary Table 생성\n","CREATE TABLE adhoc.keeyong_monthly_channel_summary\n","AS\n","SELECT TO_CHAR(ts, 'YYYY-MM') year_month, \n","    usc.channel, \n","    COUNT(DISTINCT usc.userid) unique_users, \n","    COUNT(DISTINCT CASE WHEN amount>0 THEN userid END) paid_users,\n","    ROUND(paid_users*100./NULLIF(unique_users,0),2) conversion_rate, \n","    SUM(amount) gross_revenue, \n","    SUM(CASE WHEN refunded is False THEN amount\n","        ELSE 0 END) net_revenue\n","  FROM raw_data.user_session_channel usc\n","  JOIN raw_data.session_timestamp st ON usc.sessionid = st.sessionid\n","  LEFT JOIN raw_data.session_transaction str ON usc.sessionid = str.sessionid\n","GROUP BY 1, 2;\n","-- CTAS 사용할 때는 ORDER BY 넣어 봤자 RDBMS에서 원하는 대로 넣음 -> ORDER BY 추가할 필요 없음\n","\n","--정상적으로 생성되었는지 확인\n","SELECT * FROM adhoc.keeyong_monthly_channel_summary;\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","Done.\n","Done.\n","42 rows affected.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<table>\n","    <thead>\n","        <tr>\n","            <th>year_month</th>\n","            <th>channel</th>\n","            <th>unique_users</th>\n","            <th>paid_users</th>\n","            <th>conversion_rate</th>\n","            <th>gross_revenue</th>\n","            <th>net_revenue</th>\n","        </tr>\n","    </thead>\n","    <tbody>\n","        <tr>\n","            <td>2019-05</td>\n","            <td>Facebook</td>\n","            <td>247</td>\n","            <td>14</td>\n","            <td>5</td>\n","            <td>1199</td>\n","            <td>997</td>\n","        </tr>\n","        <tr>\n","            <td>2019-05</td>\n","            <td>Organic</td>\n","            <td>238</td>\n","            <td>17</td>\n","            <td>7</td>\n","            <td>1846</td>\n","            <td>1571</td>\n","        </tr>\n","        <tr>\n","            <td>2019-05</td>\n","            <td>Google</td>\n","            <td>253</td>\n","            <td>10</td>\n","            <td>3</td>\n","            <td>580</td>\n","            <td>580</td>\n","        </tr>\n","        <tr>\n","            <td>2019-07</td>\n","            <td>Organic</td>\n","            <td>557</td>\n","            <td>22</td>\n","            <td>3</td>\n","            <td>1600</td>\n","            <td>1600</td>\n","        </tr>\n","        <tr>\n","            <td>2019-08</td>\n","            <td>Instagram</td>\n","            <td>621</td>\n","            <td>28</td>\n","            <td>4</td>\n","            <td>2129</td>\n","            <td>2001</td>\n","        </tr>\n","        <tr>\n","            <td>2019-08</td>\n","            <td>Google</td>\n","            <td>610</td>\n","            <td>27</td>\n","            <td>4</td>\n","            <td>2210</td>\n","            <td>1894</td>\n","        </tr>\n","        <tr>\n","            <td>2019-09</td>\n","            <td>Facebook</td>\n","            <td>597</td>\n","            <td>27</td>\n","            <td>4</td>\n","            <td>2270</td>\n","            <td>2270</td>\n","        </tr>\n","        <tr>\n","            <td>2019-11</td>\n","            <td>Google</td>\n","            <td>688</td>\n","            <td>26</td>\n","            <td>3</td>\n","            <td>2286</td>\n","            <td>2235</td>\n","        </tr>\n","        <tr>\n","            <td>2019-11</td>\n","            <td>Facebook</td>\n","            <td>688</td>\n","            <td>25</td>\n","            <td>3</td>\n","            <td>1678</td>\n","            <td>1678</td>\n","        </tr>\n","        <tr>\n","            <td>2019-06</td>\n","            <td>Youtube</td>\n","            <td>400</td>\n","            <td>17</td>\n","            <td>4</td>\n","            <td>1042</td>\n","            <td>1042</td>\n","        </tr>\n","        <tr>\n","            <td>2019-06</td>\n","            <td>Naver</td>\n","            <td>398</td>\n","            <td>15</td>\n","            <td>3</td>\n","            <td>1090</td>\n","            <td>1090</td>\n","        </tr>\n","        <tr>\n","            <td>2019-06</td>\n","            <td>Google</td>\n","            <td>412</td>\n","            <td>13</td>\n","            <td>3</td>\n","            <td>947</td>\n","            <td>947</td>\n","        </tr>\n","        <tr>\n","            <td>2019-07</td>\n","            <td>Google</td>\n","            <td>556</td>\n","            <td>21</td>\n","            <td>3</td>\n","            <td>1558</td>\n","            <td>1385</td>\n","        </tr>\n","        <tr>\n","            <td>2019-07</td>\n","            <td>Naver</td>\n","            <td>553</td>\n","            <td>19</td>\n","            <td>3</td>\n","            <td>1547</td>\n","            <td>1547</td>\n","        </tr>\n","        <tr>\n","            <td>2019-08</td>\n","            <td>Naver</td>\n","            <td>626</td>\n","            <td>22</td>\n","            <td>3</td>\n","            <td>1829</td>\n","            <td>1551</td>\n","        </tr>\n","        <tr>\n","            <td>2019-09</td>\n","            <td>Organic</td>\n","            <td>592</td>\n","            <td>22</td>\n","            <td>3</td>\n","            <td>1267</td>\n","            <td>1267</td>\n","        </tr>\n","        <tr>\n","            <td>2019-09</td>\n","            <td>Google</td>\n","            <td>599</td>\n","            <td>25</td>\n","            <td>4</td>\n","            <td>1872</td>\n","            <td>1691</td>\n","        </tr>\n","        <tr>\n","            <td>2019-10</td>\n","            <td>Organic</td>\n","            <td>709</td>\n","            <td>31</td>\n","            <td>4</td>\n","            <td>2762</td>\n","            <td>2608</td>\n","        </tr>\n","        <tr>\n","            <td>2019-10</td>\n","            <td>Google</td>\n","            <td>699</td>\n","            <td>30</td>\n","            <td>4</td>\n","            <td>2150</td>\n","            <td>2098</td>\n","        </tr>\n","        <tr>\n","            <td>2019-10</td>\n","            <td>Naver</td>\n","            <td>713</td>\n","            <td>32</td>\n","            <td>4</td>\n","            <td>2695</td>\n","            <td>2695</td>\n","        </tr>\n","        <tr>\n","            <td>2019-11</td>\n","            <td>Youtube</td>\n","            <td>677</td>\n","            <td>45</td>\n","            <td>6</td>\n","            <td>3532</td>\n","            <td>3331</td>\n","        </tr>\n","        <tr>\n","            <td>2019-05</td>\n","            <td>Youtube</td>\n","            <td>244</td>\n","            <td>9</td>\n","            <td>3</td>\n","            <td>529</td>\n","            <td>529</td>\n","        </tr>\n","        <tr>\n","            <td>2019-05</td>\n","            <td>Instagram</td>\n","            <td>234</td>\n","            <td>11</td>\n","            <td>4</td>\n","            <td>959</td>\n","            <td>770</td>\n","        </tr>\n","        <tr>\n","            <td>2019-07</td>\n","            <td>Youtube</td>\n","            <td>564</td>\n","            <td>36</td>\n","            <td>6</td>\n","            <td>2210</td>\n","            <td>2037</td>\n","        </tr>\n","        <tr>\n","            <td>2019-07</td>\n","            <td>Facebook</td>\n","            <td>558</td>\n","            <td>32</td>\n","            <td>5</td>\n","            <td>2222</td>\n","            <td>2144</td>\n","        </tr>\n","        <tr>\n","            <td>2019-08</td>\n","            <td>Facebook</td>\n","            <td>611</td>\n","            <td>18</td>\n","            <td>2</td>\n","            <td>1009</td>\n","            <td>1009</td>\n","        </tr>\n","        <tr>\n","            <td>2019-09</td>\n","            <td>Youtube</td>\n","            <td>588</td>\n","            <td>15</td>\n","            <td>2</td>\n","            <td>1301</td>\n","            <td>1301</td>\n","        </tr>\n","        <tr>\n","            <td>2019-10</td>\n","            <td>Youtube</td>\n","            <td>705</td>\n","            <td>34</td>\n","            <td>4</td>\n","            <td>2492</td>\n","            <td>2319</td>\n","        </tr>\n","        <tr>\n","            <td>2019-11</td>\n","            <td>Naver</td>\n","            <td>667</td>\n","            <td>26</td>\n","            <td>3</td>\n","            <td>2234</td>\n","            <td>1987</td>\n","        </tr>\n","        <tr>\n","            <td>2019-05</td>\n","            <td>Naver</td>\n","            <td>237</td>\n","            <td>11</td>\n","            <td>4</td>\n","            <td>867</td>\n","            <td>844</td>\n","        </tr>\n","        <tr>\n","            <td>2019-06</td>\n","            <td>Organic</td>\n","            <td>416</td>\n","            <td>14</td>\n","            <td>3</td>\n","            <td>1129</td>\n","            <td>940</td>\n","        </tr>\n","        <tr>\n","            <td>2019-06</td>\n","            <td>Instagram</td>\n","            <td>410</td>\n","            <td>21</td>\n","            <td>5</td>\n","            <td>1462</td>\n","            <td>1418</td>\n","        </tr>\n","        <tr>\n","            <td>2019-06</td>\n","            <td>Facebook</td>\n","            <td>414</td>\n","            <td>22</td>\n","            <td>5</td>\n","            <td>1578</td>\n","            <td>1578</td>\n","        </tr>\n","        <tr>\n","            <td>2019-07</td>\n","            <td>Instagram</td>\n","            <td>567</td>\n","            <td>24</td>\n","            <td>4</td>\n","            <td>1896</td>\n","            <td>1766</td>\n","        </tr>\n","        <tr>\n","            <td>2019-08</td>\n","            <td>Youtube</td>\n","            <td>614</td>\n","            <td>18</td>\n","            <td>2</td>\n","            <td>987</td>\n","            <td>950</td>\n","        </tr>\n","        <tr>\n","            <td>2019-08</td>\n","            <td>Organic</td>\n","            <td>608</td>\n","            <td>26</td>\n","            <td>4</td>\n","            <td>1643</td>\n","            <td>1606</td>\n","        </tr>\n","        <tr>\n","            <td>2019-09</td>\n","            <td>Instagram</td>\n","            <td>588</td>\n","            <td>20</td>\n","            <td>3</td>\n","            <td>1260</td>\n","            <td>1122</td>\n","        </tr>\n","        <tr>\n","            <td>2019-09</td>\n","            <td>Naver</td>\n","            <td>592</td>\n","            <td>21</td>\n","            <td>3</td>\n","            <td>1996</td>\n","            <td>1996</td>\n","        </tr>\n","        <tr>\n","            <td>2019-10</td>\n","            <td>Instagram</td>\n","            <td>707</td>\n","            <td>33</td>\n","            <td>4</td>\n","            <td>2568</td>\n","            <td>2395</td>\n","        </tr>\n","        <tr>\n","            <td>2019-10</td>\n","            <td>Facebook</td>\n","            <td>698</td>\n","            <td>29</td>\n","            <td>4</td>\n","            <td>1650</td>\n","            <td>1641</td>\n","        </tr>\n","        <tr>\n","            <td>2019-11</td>\n","            <td>Organic</td>\n","            <td>677</td>\n","            <td>34</td>\n","            <td>5</td>\n","            <td>2626</td>\n","            <td>2255</td>\n","        </tr>\n","        <tr>\n","            <td>2019-11</td>\n","            <td>Instagram</td>\n","            <td>669</td>\n","            <td>25</td>\n","            <td>3</td>\n","            <td>2116</td>\n","            <td>2116</td>\n","        </tr>\n","    </tbody>\n","</table>"],"text/plain":["[('2019-05', 'Facebook', 247, 14, Decimal('5'), 1199, 997),\n"," ('2019-05', 'Organic', 238, 17, Decimal('7'), 1846, 1571),\n"," ('2019-05', 'Google', 253, 10, Decimal('3'), 580, 580),\n"," ('2019-07', 'Organic', 557, 22, Decimal('3'), 1600, 1600),\n"," ('2019-08', 'Instagram', 621, 28, Decimal('4'), 2129, 2001),\n"," ('2019-08', 'Google', 610, 27, Decimal('4'), 2210, 1894),\n"," ('2019-09', 'Facebook', 597, 27, Decimal('4'), 2270, 2270),\n"," ('2019-11', 'Google', 688, 26, Decimal('3'), 2286, 2235),\n"," ('2019-11', 'Facebook', 688, 25, Decimal('3'), 1678, 1678),\n"," ('2019-06', 'Youtube', 400, 17, Decimal('4'), 1042, 1042),\n"," ('2019-06', 'Naver', 398, 15, Decimal('3'), 1090, 1090),\n"," ('2019-06', 'Google', 412, 13, Decimal('3'), 947, 947),\n"," ('2019-07', 'Google', 556, 21, Decimal('3'), 1558, 1385),\n"," ('2019-07', 'Naver', 553, 19, Decimal('3'), 1547, 1547),\n"," ('2019-08', 'Naver', 626, 22, Decimal('3'), 1829, 1551),\n"," ('2019-09', 'Organic', 592, 22, Decimal('3'), 1267, 1267),\n"," ('2019-09', 'Google', 599, 25, Decimal('4'), 1872, 1691),\n"," ('2019-10', 'Organic', 709, 31, Decimal('4'), 2762, 2608),\n"," ('2019-10', 'Google', 699, 30, Decimal('4'), 2150, 2098),\n"," ('2019-10', 'Naver', 713, 32, Decimal('4'), 2695, 2695),\n"," ('2019-11', 'Youtube', 677, 45, Decimal('6'), 3532, 3331),\n"," ('2019-05', 'Youtube', 244, 9, Decimal('3'), 529, 529),\n"," ('2019-05', 'Instagram', 234, 11, Decimal('4'), 959, 770),\n"," ('2019-07', 'Youtube', 564, 36, Decimal('6'), 2210, 2037),\n"," ('2019-07', 'Facebook', 558, 32, Decimal('5'), 2222, 2144),\n"," ('2019-08', 'Facebook', 611, 18, Decimal('2'), 1009, 1009),\n"," ('2019-09', 'Youtube', 588, 15, Decimal('2'), 1301, 1301),\n"," ('2019-10', 'Youtube', 705, 34, Decimal('4'), 2492, 2319),\n"," ('2019-11', 'Naver', 667, 26, Decimal('3'), 2234, 1987),\n"," ('2019-05', 'Naver', 237, 11, Decimal('4'), 867, 844),\n"," ('2019-06', 'Organic', 416, 14, Decimal('3'), 1129, 940),\n"," ('2019-06', 'Instagram', 410, 21, Decimal('5'), 1462, 1418),\n"," ('2019-06', 'Facebook', 414, 22, Decimal('5'), 1578, 1578),\n"," ('2019-07', 'Instagram', 567, 24, Decimal('4'), 1896, 1766),\n"," ('2019-08', 'Youtube', 614, 18, Decimal('2'), 987, 950),\n"," ('2019-08', 'Organic', 608, 26, Decimal('4'), 1643, 1606),\n"," ('2019-09', 'Instagram', 588, 20, Decimal('3'), 1260, 1122),\n"," ('2019-09', 'Naver', 592, 21, Decimal('3'), 1996, 1996),\n"," ('2019-10', 'Instagram', 707, 33, Decimal('4'), 2568, 2395),\n"," ('2019-10', 'Facebook', 698, 29, Decimal('4'), 1650, 1641),\n"," ('2019-11', 'Organic', 677, 34, Decimal('5'), 2626, 2255),\n"," ('2019-11', 'Instagram', 669, 25, Decimal('3'), 2116, 2116)]"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"WuIDGE4s8jiB","colab":{"base_uri":"https://localhost:8080/","height":241},"executionInfo":{"status":"ok","timestamp":1625816372628,"user_tz":-540,"elapsed":830,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"01ace8e9-d075-4184-80d2-c2c726e74a02"},"source":["%%sql\n","\n","SELECT *\n","FROM raw_data.count_test;"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","7 rows affected.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<table>\n","    <thead>\n","        <tr>\n","            <th>value</th>\n","        </tr>\n","    </thead>\n","    <tbody>\n","        <tr>\n","            <td>None</td>\n","        </tr>\n","        <tr>\n","            <td>1</td>\n","        </tr>\n","        <tr>\n","            <td>1</td>\n","        </tr>\n","        <tr>\n","            <td>0</td>\n","        </tr>\n","        <tr>\n","            <td>0</td>\n","        </tr>\n","        <tr>\n","            <td>4</td>\n","        </tr>\n","        <tr>\n","            <td>3</td>\n","        </tr>\n","    </tbody>\n","</table>"],"text/plain":["[(None,), (1,), (1,), (0,), (0,), (4,), (3,)]"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"0qLcBWDp8gl-","colab":{"base_uri":"https://localhost:8080/","height":241},"executionInfo":{"status":"ok","timestamp":1625816375639,"user_tz":-540,"elapsed":269,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"503ac340-61a9-466e-c4d4-11c60bb97f53"},"source":["%%sql\n","\n","SELECT\n","     value,\n","     COALESCE(value, 0)\n","FROM raw_data.count_test;"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" * postgresql://guest:***@learnde.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev\n","7 rows affected.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<table>\n","    <thead>\n","        <tr>\n","            <th>value</th>\n","            <th>coalesce</th>\n","        </tr>\n","    </thead>\n","    <tbody>\n","        <tr>\n","            <td>None</td>\n","            <td>0</td>\n","        </tr>\n","        <tr>\n","            <td>1</td>\n","            <td>1</td>\n","        </tr>\n","        <tr>\n","            <td>1</td>\n","            <td>1</td>\n","        </tr>\n","        <tr>\n","            <td>0</td>\n","            <td>0</td>\n","        </tr>\n","        <tr>\n","            <td>0</td>\n","            <td>0</td>\n","        </tr>\n","        <tr>\n","            <td>4</td>\n","            <td>4</td>\n","        </tr>\n","        <tr>\n","            <td>3</td>\n","            <td>3</td>\n","        </tr>\n","    </tbody>\n","</table>"],"text/plain":["[(None, 0), (1, 1), (1, 1), (0, 0), (0, 0), (4, 4), (3, 3)]"]},"metadata":{"tags":[]},"execution_count":19}]}]}