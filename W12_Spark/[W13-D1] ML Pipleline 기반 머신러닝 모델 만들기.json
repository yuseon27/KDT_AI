{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"[W13-D1] ML Pipleline 기반 머신러닝 모델 만들기","provenance":[],"collapsed_sections":["cGMk-ULmLcVM","6kK7gG2JLjy_","ELSupsQVLFK-"]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"xAqhTDfuWrcM"},"source":["PySpark을 로컬머신에 설치하고 노트북을 사용하기 보다는 머신러닝 관련 다양한 라이브러리가 이미 설치되었고 좋은 하드웨어를 제공해주는 Google Colab을 통해 실습을 진행한다."]},{"cell_type":"markdown","metadata":{"id":"XIA23YgbXKJd"},"source":["이를 위해 pyspark과 Py4J 패키지를 설치한다. Py4J 패키지는 파이썬 프로그램이 자바가상머신상의 오브젝트들을 접근할 수 있게 해준다. Local Standalone Spark을 사용한다."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NbT0rpGfVdiq","executionInfo":{"status":"ok","timestamp":1627565005735,"user_tz":-540,"elapsed":37857,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"811c9245-f721-470b-8354-dbc253dd18b7"},"source":["!pip install pyspark==3.0.1 py4j==0.10.9"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Collecting pyspark==3.0.1\n","  Downloading pyspark-3.0.1.tar.gz (204.2 MB)\n","\u001b[K     |████████████████████████████████| 204.2 MB 34 kB/s \n","\u001b[?25hCollecting py4j==0.10.9\n","  Downloading py4j-0.10.9-py2.py3-none-any.whl (198 kB)\n","\u001b[K     |████████████████████████████████| 198 kB 53.6 MB/s \n","\u001b[?25hBuilding wheels for collected packages: pyspark\n","  Building wheel for pyspark (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyspark: filename=pyspark-3.0.1-py2.py3-none-any.whl size=204612242 sha256=1b736c2a818369d971485474670e25c3932e4ff9f0cd4ba1cf81c668e96dd47f\n","  Stored in directory: /root/.cache/pip/wheels/5e/34/fa/b37b5cef503fc5148b478b2495043ba61b079120b7ff379f9b\n","Successfully built pyspark\n","Installing collected packages: py4j, pyspark\n","Successfully installed py4j-0.10.9 pyspark-3.0.1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"3vm6tgcPXdnR","executionInfo":{"status":"ok","timestamp":1627565013237,"user_tz":-540,"elapsed":7508,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}}},"source":["from pyspark.sql import SparkSession\n","\n","spark = SparkSession \\\n","    .builder \\\n","    .appName(\"Titanic Classification via ML Pipeline and Model Selection\") \\\n","    .getOrCreate()"],"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"pyl0gES0KhkF"},"source":["# 타이타닉 생존 예측 모델 만들기\n","\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":216},"id":"LSs_1PYaYWxI","executionInfo":{"status":"ok","timestamp":1627565013246,"user_tz":-540,"elapsed":30,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"d38b22ea-bdbe-47fa-cb1d-72a4d3d28d96"},"source":["spark"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","            <div>\n","                <p><b>SparkSession - in-memory</b></p>\n","                \n","        <div>\n","            <p><b>SparkContext</b></p>\n","\n","            <p><a href=\"http://6cd2e41b5071:4040\">Spark UI</a></p>\n","\n","            <dl>\n","              <dt>Version</dt>\n","                <dd><code>v3.0.1</code></dd>\n","              <dt>Master</dt>\n","                <dd><code>local[*]</code></dd>\n","              <dt>AppName</dt>\n","                <dd><code>Titanic Classification via ML Pipeline and Model Selection</code></dd>\n","            </dl>\n","        </div>\n","        \n","            </div>\n","        "],"text/plain":["<pyspark.sql.session.SparkSession at 0x7f1a64558a90>"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"vE8iL4vy6705","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1627565013918,"user_tz":-540,"elapsed":686,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"6015fe99-d7ed-491a-96be-03df65c68702"},"source":["!wget https://s3-geospatial.s3-us-west-2.amazonaws.com/titanic.csv"],"execution_count":4,"outputs":[{"output_type":"stream","text":["--2021-07-29 13:23:32--  https://s3-geospatial.s3-us-west-2.amazonaws.com/titanic.csv\n","Resolving s3-geospatial.s3-us-west-2.amazonaws.com (s3-geospatial.s3-us-west-2.amazonaws.com)... 52.218.153.25\n","Connecting to s3-geospatial.s3-us-west-2.amazonaws.com (s3-geospatial.s3-us-west-2.amazonaws.com)|52.218.153.25|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 61197 (60K) [text/csv]\n","Saving to: ‘titanic.csv’\n","\n","titanic.csv         100%[===================>]  59.76K   369KB/s    in 0.2s    \n","\n","2021-07-29 13:23:33 (369 KB/s) - ‘titanic.csv’ saved [61197/61197]\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o8gErwpeCsp3","executionInfo":{"status":"ok","timestamp":1627565013920,"user_tz":-540,"elapsed":8,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"6ce208ec-d676-419c-937e-8b5f19235ad1"},"source":["!ls -tl"],"execution_count":5,"outputs":[{"output_type":"stream","text":["total 64\n","drwxr-xr-x 1 root root  4096 Jul 16 13:20 sample_data\n","-rw-r--r-- 1 root root 61197 Jan 31 03:56 titanic.csv\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-mH3roiKIOix","executionInfo":{"status":"ok","timestamp":1627565020090,"user_tz":-540,"elapsed":6174,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}}},"source":["data = spark.read.csv('./titanic.csv', header=True, inferSchema=True)"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SCty0kw6ITVi","executionInfo":{"status":"ok","timestamp":1627565020091,"user_tz":-540,"elapsed":7,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"9fd10713-fe6c-4f5f-ace0-287178bf82fb"},"source":["data.printSchema()"],"execution_count":7,"outputs":[{"output_type":"stream","text":["root\n"," |-- PassengerId: integer (nullable = true)\n"," |-- Survived: integer (nullable = true)\n"," |-- Pclass: integer (nullable = true)\n"," |-- Name: string (nullable = true)\n"," |-- Gender: string (nullable = true)\n"," |-- Age: double (nullable = true)\n"," |-- SibSp: integer (nullable = true)\n"," |-- Parch: integer (nullable = true)\n"," |-- Ticket: string (nullable = true)\n"," |-- Fare: double (nullable = true)\n"," |-- Cabin: string (nullable = true)\n"," |-- Embarked: string (nullable = true)\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nrlYYyVfIV1e","executionInfo":{"status":"ok","timestamp":1627565020796,"user_tz":-540,"elapsed":710,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"3f2906a2-248e-46fa-a05b-ebf9903590ed"},"source":["data.show()"],"execution_count":8,"outputs":[{"output_type":"stream","text":["+-----------+--------+------+--------------------+------+----+-----+-----+----------------+-------+-----+--------+\n","|PassengerId|Survived|Pclass|                Name|Gender| Age|SibSp|Parch|          Ticket|   Fare|Cabin|Embarked|\n","+-----------+--------+------+--------------------+------+----+-----+-----+----------------+-------+-----+--------+\n","|          1|       0|     3|Braund, Mr. Owen ...|  male|22.0|    1|    0|       A/5 21171|   7.25| null|       S|\n","|          2|       1|     1|Cumings, Mrs. Joh...|female|38.0|    1|    0|        PC 17599|71.2833|  C85|       C|\n","|          3|       1|     3|Heikkinen, Miss. ...|female|26.0|    0|    0|STON/O2. 3101282|  7.925| null|       S|\n","|          4|       1|     1|Futrelle, Mrs. Ja...|female|35.0|    1|    0|          113803|   53.1| C123|       S|\n","|          5|       0|     3|Allen, Mr. Willia...|  male|35.0|    0|    0|          373450|   8.05| null|       S|\n","|          6|       0|     3|    Moran, Mr. James|  male|null|    0|    0|          330877| 8.4583| null|       Q|\n","|          7|       0|     1|McCarthy, Mr. Tim...|  male|54.0|    0|    0|           17463|51.8625|  E46|       S|\n","|          8|       0|     3|Palsson, Master. ...|  male| 2.0|    3|    1|          349909| 21.075| null|       S|\n","|          9|       1|     3|Johnson, Mrs. Osc...|female|27.0|    0|    2|          347742|11.1333| null|       S|\n","|         10|       1|     2|Nasser, Mrs. Nich...|female|14.0|    1|    0|          237736|30.0708| null|       C|\n","|         11|       1|     3|Sandstrom, Miss. ...|female| 4.0|    1|    1|         PP 9549|   16.7|   G6|       S|\n","|         12|       1|     1|Bonnell, Miss. El...|female|58.0|    0|    0|          113783|  26.55| C103|       S|\n","|         13|       0|     3|Saundercock, Mr. ...|  male|20.0|    0|    0|       A/5. 2151|   8.05| null|       S|\n","|         14|       0|     3|Andersson, Mr. An...|  male|39.0|    1|    5|          347082| 31.275| null|       S|\n","|         15|       0|     3|Vestrom, Miss. Hu...|female|14.0|    0|    0|          350406| 7.8542| null|       S|\n","|         16|       1|     2|Hewlett, Mrs. (Ma...|female|55.0|    0|    0|          248706|   16.0| null|       S|\n","|         17|       0|     3|Rice, Master. Eugene|  male| 2.0|    4|    1|          382652| 29.125| null|       Q|\n","|         18|       1|     2|Williams, Mr. Cha...|  male|null|    0|    0|          244373|   13.0| null|       S|\n","|         19|       0|     3|Vander Planke, Mr...|female|31.0|    1|    0|          345763|   18.0| null|       S|\n","|         20|       1|     3|Masselmani, Mrs. ...|female|null|    0|    0|            2649|  7.225| null|       C|\n","+-----------+--------+------+--------------------+------+----+-----+-----+----------------+-------+-----+--------+\n","only showing top 20 rows\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rW75AqANmRZN","executionInfo":{"status":"ok","timestamp":1627565024358,"user_tz":-540,"elapsed":3566,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"b385c20a-7a53-482f-a939-35a6f52fce6f"},"source":["data.select(['*']).describe().show()"],"execution_count":9,"outputs":[{"output_type":"stream","text":["+-------+-----------------+-------------------+------------------+--------------------+------+------------------+------------------+-------------------+------------------+-----------------+-----+--------+\n","|summary|      PassengerId|           Survived|            Pclass|                Name|Gender|               Age|             SibSp|              Parch|            Ticket|             Fare|Cabin|Embarked|\n","+-------+-----------------+-------------------+------------------+--------------------+------+------------------+------------------+-------------------+------------------+-----------------+-----+--------+\n","|  count|              891|                891|               891|                 891|   891|               714|               891|                891|               891|              891|  204|     889|\n","|   mean|            446.0| 0.3838383838383838| 2.308641975308642|                null|  null| 29.69911764705882|0.5230078563411896|0.38159371492704824|260318.54916792738| 32.2042079685746| null|    null|\n","| stddev|257.3538420152301|0.48659245426485753|0.8360712409770491|                null|  null|14.526497332334035|1.1027434322934315| 0.8060572211299488|471609.26868834975|49.69342859718089| null|    null|\n","|    min|                1|                  0|                 1|\"Andersson, Mr. A...|female|              0.42|                 0|                  0|            110152|              0.0|  A10|       C|\n","|    max|              891|                  1|                 3|van Melkebeke, Mr...|  male|              80.0|                 8|                  6|         WE/P 5735|         512.3292|    T|       S|\n","+-------+-----------------+-------------------+------------------+--------------------+------+------------------+------------------+-------------------+------------------+-----------------+-----+--------+\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"teK9rhGml7gE"},"source":["**데이터 클린업**: \n","\n","*   PassengerID, Name, Ticket, Embarked는 사용하지 않을 예정 (아무 의미가 없음).\n","*   Cabin도 비어있는 값이 너무 많아서 사용하지 않을 예정\n","*   Age는 중요한 정보인데 비어있는 레코드들이 많아서 디폴트값을 채워줄 예정\n","*   모든 필드를 MinMaxScaler로 스케일\n","*   Gender의 경우 카테고리 정보이기에 숫자로 인코딩 필요\n","\n"]},{"cell_type":"code","metadata":{"id":"FeP0qwDyl-tp","executionInfo":{"status":"ok","timestamp":1627565024359,"user_tz":-540,"elapsed":6,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}}},"source":["final_data = data.select(['Survived', 'Pclass', 'Gender', 'Age', 'SibSp', 'Parch', 'Fare'])"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fyuHao_xVki4","executionInfo":{"status":"ok","timestamp":1627565024787,"user_tz":-540,"elapsed":432,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"5eaad711-623a-4377-d2bf-5013b731d0ca"},"source":["final_data.show()"],"execution_count":11,"outputs":[{"output_type":"stream","text":["+--------+------+------+----+-----+-----+-------+\n","|Survived|Pclass|Gender| Age|SibSp|Parch|   Fare|\n","+--------+------+------+----+-----+-----+-------+\n","|       0|     3|  male|22.0|    1|    0|   7.25|\n","|       1|     1|female|38.0|    1|    0|71.2833|\n","|       1|     3|female|26.0|    0|    0|  7.925|\n","|       1|     1|female|35.0|    1|    0|   53.1|\n","|       0|     3|  male|35.0|    0|    0|   8.05|\n","|       0|     3|  male|null|    0|    0| 8.4583|\n","|       0|     1|  male|54.0|    0|    0|51.8625|\n","|       0|     3|  male| 2.0|    3|    1| 21.075|\n","|       1|     3|female|27.0|    0|    2|11.1333|\n","|       1|     2|female|14.0|    1|    0|30.0708|\n","|       1|     3|female| 4.0|    1|    1|   16.7|\n","|       1|     1|female|58.0|    0|    0|  26.55|\n","|       0|     3|  male|20.0|    0|    0|   8.05|\n","|       0|     3|  male|39.0|    1|    5| 31.275|\n","|       0|     3|female|14.0|    0|    0| 7.8542|\n","|       1|     2|female|55.0|    0|    0|   16.0|\n","|       0|     3|  male| 2.0|    4|    1| 29.125|\n","|       1|     2|  male|null|    0|    0|   13.0|\n","|       0|     3|female|31.0|    1|    0|   18.0|\n","|       1|     3|female|null|    0|    0|  7.225|\n","+--------+------+------+----+-----+-----+-------+\n","only showing top 20 rows\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Ucie7Nj1nkaD"},"source":["Age는 평균값으로 채운다"]},{"cell_type":"code","metadata":{"id":"zG4rFKaSnpHf","executionInfo":{"status":"ok","timestamp":1627565025684,"user_tz":-540,"elapsed":900,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}}},"source":["from pyspark.ml.feature import Imputer\n","\n","imputer = Imputer(strategy='mean', inputCols=['Age'], outputCols=['AgeImputed'])\n","imputer_model = imputer.fit(final_data)\n","final_data = imputer_model.transform(final_data)"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WD8cDy6Onv0X","executionInfo":{"status":"ok","timestamp":1627565025991,"user_tz":-540,"elapsed":310,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"8167d27f-5e7a-4ff3-e9e8-121d48f9c501"},"source":["final_data.select(\"Age\", \"AgeImputed\").show()"],"execution_count":13,"outputs":[{"output_type":"stream","text":["+----+-----------------+\n","| Age|       AgeImputed|\n","+----+-----------------+\n","|22.0|             22.0|\n","|38.0|             38.0|\n","|26.0|             26.0|\n","|35.0|             35.0|\n","|35.0|             35.0|\n","|null|29.69911764705882|\n","|54.0|             54.0|\n","| 2.0|              2.0|\n","|27.0|             27.0|\n","|14.0|             14.0|\n","| 4.0|              4.0|\n","|58.0|             58.0|\n","|20.0|             20.0|\n","|39.0|             39.0|\n","|14.0|             14.0|\n","|55.0|             55.0|\n","| 2.0|              2.0|\n","|null|29.69911764705882|\n","|31.0|             31.0|\n","|null|29.69911764705882|\n","+----+-----------------+\n","only showing top 20 rows\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"6GFsTmtRn7EW"},"source":["성별 정보 인코딩: male -> 0, female -> 1"]},{"cell_type":"code","metadata":{"id":"5BMZzehCn4s1","executionInfo":{"status":"ok","timestamp":1627565027277,"user_tz":-540,"elapsed":1289,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}}},"source":["from pyspark.ml.feature import StringIndexer\n","\n","gender_indexer = StringIndexer(inputCol='Gender', outputCol='GenderIndexed')\n","gender_indexer_model = gender_indexer.fit(final_data)\n","final_data = gender_indexer_model.transform(final_data)"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jYSjGzLnoMU2","executionInfo":{"status":"ok","timestamp":1627565027278,"user_tz":-540,"elapsed":10,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"768af1fe-c92b-4d32-92ce-7e7dc6adac12"},"source":["final_data.select(\"Gender\", \"GenderIndexed\").show()"],"execution_count":15,"outputs":[{"output_type":"stream","text":["+------+-------------+\n","|Gender|GenderIndexed|\n","+------+-------------+\n","|  male|          0.0|\n","|female|          1.0|\n","|female|          1.0|\n","|female|          1.0|\n","|  male|          0.0|\n","|  male|          0.0|\n","|  male|          0.0|\n","|  male|          0.0|\n","|female|          1.0|\n","|female|          1.0|\n","|female|          1.0|\n","|female|          1.0|\n","|  male|          0.0|\n","|  male|          0.0|\n","|female|          1.0|\n","|female|          1.0|\n","|  male|          0.0|\n","|  male|          0.0|\n","|female|          1.0|\n","|female|          1.0|\n","+------+-------------+\n","only showing top 20 rows\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"cGMk-ULmLcVM"},"source":["## 피쳐 벡터를 만들기"]},{"cell_type":"code","metadata":{"id":"vBYWOVQYIXEt","executionInfo":{"status":"ok","timestamp":1627565031354,"user_tz":-540,"elapsed":420,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}}},"source":["from pyspark.ml.feature import VectorAssembler\n","\n","assembler = VectorAssembler(inputCols=['Pclass', 'SibSp', 'Parch', 'Fare', 'AgeImputed', 'GenderIndexed'], outputCol='features')\n","data_vec = assembler.transform(final_data)"],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e0WZHfxmIuxr","executionInfo":{"status":"ok","timestamp":1627565032407,"user_tz":-540,"elapsed":278,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"efa5f637-ff3f-49eb-d4e3-5ba0870801bb"},"source":["data_vec.show()"],"execution_count":17,"outputs":[{"output_type":"stream","text":["+--------+------+------+----+-----+-----+-------+-----------------+-------------+--------------------+\n","|Survived|Pclass|Gender| Age|SibSp|Parch|   Fare|       AgeImputed|GenderIndexed|            features|\n","+--------+------+------+----+-----+-----+-------+-----------------+-------------+--------------------+\n","|       0|     3|  male|22.0|    1|    0|   7.25|             22.0|          0.0|[3.0,1.0,0.0,7.25...|\n","|       1|     1|female|38.0|    1|    0|71.2833|             38.0|          1.0|[1.0,1.0,0.0,71.2...|\n","|       1|     3|female|26.0|    0|    0|  7.925|             26.0|          1.0|[3.0,0.0,0.0,7.92...|\n","|       1|     1|female|35.0|    1|    0|   53.1|             35.0|          1.0|[1.0,1.0,0.0,53.1...|\n","|       0|     3|  male|35.0|    0|    0|   8.05|             35.0|          0.0|[3.0,0.0,0.0,8.05...|\n","|       0|     3|  male|null|    0|    0| 8.4583|29.69911764705882|          0.0|[3.0,0.0,0.0,8.45...|\n","|       0|     1|  male|54.0|    0|    0|51.8625|             54.0|          0.0|[1.0,0.0,0.0,51.8...|\n","|       0|     3|  male| 2.0|    3|    1| 21.075|              2.0|          0.0|[3.0,3.0,1.0,21.0...|\n","|       1|     3|female|27.0|    0|    2|11.1333|             27.0|          1.0|[3.0,0.0,2.0,11.1...|\n","|       1|     2|female|14.0|    1|    0|30.0708|             14.0|          1.0|[2.0,1.0,0.0,30.0...|\n","|       1|     3|female| 4.0|    1|    1|   16.7|              4.0|          1.0|[3.0,1.0,1.0,16.7...|\n","|       1|     1|female|58.0|    0|    0|  26.55|             58.0|          1.0|[1.0,0.0,0.0,26.5...|\n","|       0|     3|  male|20.0|    0|    0|   8.05|             20.0|          0.0|[3.0,0.0,0.0,8.05...|\n","|       0|     3|  male|39.0|    1|    5| 31.275|             39.0|          0.0|[3.0,1.0,5.0,31.2...|\n","|       0|     3|female|14.0|    0|    0| 7.8542|             14.0|          1.0|[3.0,0.0,0.0,7.85...|\n","|       1|     2|female|55.0|    0|    0|   16.0|             55.0|          1.0|[2.0,0.0,0.0,16.0...|\n","|       0|     3|  male| 2.0|    4|    1| 29.125|              2.0|          0.0|[3.0,4.0,1.0,29.1...|\n","|       1|     2|  male|null|    0|    0|   13.0|29.69911764705882|          0.0|[2.0,0.0,0.0,13.0...|\n","|       0|     3|female|31.0|    1|    0|   18.0|             31.0|          1.0|[3.0,1.0,0.0,18.0...|\n","|       1|     3|female|null|    0|    0|  7.225|29.69911764705882|          1.0|[3.0,0.0,0.0,7.22...|\n","+--------+------+------+----+-----+-----+-------+-----------------+-------------+--------------------+\n","only showing top 20 rows\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"a9R6JKNqGKwW"},"source":["Age와 Fare의 값을 스케일하는 것이 주요 목표"]},{"cell_type":"code","metadata":{"id":"uCk0aAnuF3rS","executionInfo":{"status":"ok","timestamp":1627565037415,"user_tz":-540,"elapsed":696,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}}},"source":["from pyspark.ml.feature import MinMaxScaler\n","\n","age_scaler = MinMaxScaler(inputCol=\"features\", outputCol=\"features_scaled\")\n","age_scaler_model = age_scaler.fit(data_vec)\n","data_vec = age_scaler_model.transform(data_vec)"],"execution_count":18,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dhFW1EiVHKgL","outputId":"30c8c894-6125-4d3f-8347-af87c2a7fae1"},"source":["data_vec.select(\"features\", \"features_scaled\").show()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["+--------------------+--------------------+\n","|            features|     features_scaled|\n","+--------------------+--------------------+\n","|[3.0,1.0,0.0,7.25...|[1.0,0.125,0.0,0....|\n","|[1.0,1.0,0.0,71.2...|[0.0,0.125,0.0,0....|\n","|[3.0,0.0,0.0,7.92...|[1.0,0.0,0.0,0.01...|\n","|[1.0,1.0,0.0,53.1...|[0.0,0.125,0.0,0....|\n","|[3.0,0.0,0.0,8.05...|[1.0,0.0,0.0,0.01...|\n","|[3.0,0.0,0.0,8.45...|[1.0,0.0,0.0,0.01...|\n","|[1.0,0.0,0.0,51.8...|(6,[3,4],[0.10122...|\n","|[3.0,3.0,1.0,21.0...|[1.0,0.375,0.1666...|\n","|[3.0,0.0,2.0,11.1...|[1.0,0.0,0.333333...|\n","|[2.0,1.0,0.0,30.0...|[0.5,0.125,0.0,0....|\n","|[3.0,1.0,1.0,16.7...|[1.0,0.125,0.1666...|\n","|[1.0,0.0,0.0,26.5...|[0.0,0.0,0.0,0.05...|\n","|[3.0,0.0,0.0,8.05...|[1.0,0.0,0.0,0.01...|\n","|[3.0,1.0,5.0,31.2...|[1.0,0.125,0.8333...|\n","|[3.0,0.0,0.0,7.85...|[1.0,0.0,0.0,0.01...|\n","|[2.0,0.0,0.0,16.0...|[0.5,0.0,0.0,0.03...|\n","|[3.0,4.0,1.0,29.1...|[1.0,0.5,0.166666...|\n","|[2.0,0.0,0.0,13.0...|[0.5,0.0,0.0,0.02...|\n","|[3.0,1.0,0.0,18.0...|[1.0,0.125,0.0,0....|\n","|[3.0,0.0,0.0,7.22...|[1.0,0.0,0.0,0.01...|\n","+--------------------+--------------------+\n","only showing top 20 rows\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"6kK7gG2JLjy_"},"source":["## 훈련용과 테스트용 데이터를 나누고 binary classification 모델을 하나 만든다"]},{"cell_type":"code","metadata":{"id":"OEmZtDfzIyvc","executionInfo":{"status":"ok","timestamp":1627565067388,"user_tz":-540,"elapsed":309,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}}},"source":["train, test = data_vec.randomSplit([0.7, 0.3])"],"execution_count":19,"outputs":[]},{"cell_type":"code","metadata":{"id":"y1cKT-0-I2rt","executionInfo":{"status":"ok","timestamp":1627565078786,"user_tz":-540,"elapsed":4238,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}}},"source":["from pyspark.ml.classification import LogisticRegression\n","\n","algo = LogisticRegression(featuresCol=\"features_scaled\", labelCol=\"Survived\")\n","model = algo.fit(train)"],"execution_count":20,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ELSupsQVLFK-"},"source":["## 모델 성능 측정"]},{"cell_type":"code","metadata":{"id":"LX019b8qqK_d","executionInfo":{"status":"ok","timestamp":1627565092263,"user_tz":-540,"elapsed":278,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}}},"source":["predictions = model.transform(test)"],"execution_count":21,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RSYMJJ2WGgG9","executionInfo":{"status":"ok","timestamp":1627565097090,"user_tz":-540,"elapsed":3089,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"86a5d8d3-e458-479b-985f-3cc46716ef0e"},"source":["predictions.groupby(['Survived']).count().collect()"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Row(Survived=1, count=105), Row(Survived=0, count=166)]"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Kbrs3RICG1HH","executionInfo":{"status":"ok","timestamp":1627565099728,"user_tz":-540,"elapsed":2641,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"42fd9638-2724-4504-8f19-f561119fe113"},"source":["predictions.groupby(['prediction']).count().collect()"],"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Row(prediction=0.0, count=178), Row(prediction=1.0, count=93)]"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b_YF28U_qM6b","executionInfo":{"status":"ok","timestamp":1627565126268,"user_tz":-540,"elapsed":695,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"234e36e9-e7d4-4942-cda8-54f6bac76bde"},"source":["predictions.select(['Survived','prediction', 'probability']).show()"],"execution_count":24,"outputs":[{"output_type":"stream","text":["+--------+----------+--------------------+\n","|Survived|prediction|         probability|\n","+--------+----------+--------------------+\n","|       0|       1.0|[0.04535716243392...|\n","|       0|       1.0|[0.11498300830949...|\n","|       0|       0.0|[0.50003602233400...|\n","|       0|       0.0|[0.50003602233400...|\n","|       0|       1.0|[0.49113199821706...|\n","|       0|       1.0|[0.48652388722808...|\n","|       0|       1.0|[0.48531157511344...|\n","|       0|       1.0|[0.40372019433629...|\n","|       0|       1.0|[0.44850790686208...|\n","|       0|       0.0|[0.53501549082584...|\n","|       0|       1.0|[0.40187067822436...|\n","|       0|       0.0|[0.50362020452187...|\n","|       0|       0.0|[0.55313385902525...|\n","|       0|       0.0|[0.65818894577139...|\n","|       0|       0.0|[0.71040041701480...|\n","|       0|       0.0|[0.67604876131248...|\n","|       0|       0.0|[0.72404380236839...|\n","|       0|       0.0|[0.74395114428895...|\n","|       0|       0.0|[0.69715324305756...|\n","|       0|       0.0|[0.73097265741903...|\n","+--------+----------+--------------------+\n","only showing top 20 rows\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"LDzlKgOTJkTJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1627565138767,"user_tz":-540,"elapsed":1026,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"b437759c-7a07-4f79-b3f2-163c4da313ae"},"source":["from pyspark.ml.evaluation import BinaryClassificationEvaluator\n","\n","evaluator = BinaryClassificationEvaluator(labelCol='Survived', metricName='areaUnderROC')\n","evaluator.evaluate(predictions)"],"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8080034423407917"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":334},"id":"if2lu-WUL_pS","executionInfo":{"status":"ok","timestamp":1627565147768,"user_tz":-540,"elapsed":1422,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"afa90e5f-a26c-4702-e40a-6fe156bd8cae"},"source":["import matplotlib.pyplot as plt\n","\n","plt.figure(figsize=(5,5))\n","plt.plot([0, 1], [0, 1], 'r--')\n","plt.plot(model.summary.roc.select('FPR').collect(),\n","         model.summary.roc.select('TPR').collect())\n","plt.xlabel('FPR')\n","plt.ylabel('TPR')\n","plt.show()"],"execution_count":26,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"7N6Cy7nFQ1GS"},"source":["### ML Pipeline 만들기"]},{"cell_type":"code","metadata":{"id":"gbCJ4k-jRCzH","executionInfo":{"status":"ok","timestamp":1627565196998,"user_tz":-540,"elapsed":286,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}}},"source":["from pyspark.ml.feature import Imputer, StringIndexer, VectorAssembler, MinMaxScaler\n","\n","# Gender\n","stringIndexer = StringIndexer(inputCol = \"Gender\", outputCol = 'GenderIndexed')\n","\n","# Age\n","imputer = Imputer(strategy='mean', inputCols=['Age'], outputCols=['AgeImputed'])\n","\n","# Vectorize\n","inputCols = ['Pclass', 'SibSp', 'Parch', 'Fare', 'AgeImputed', 'GenderIndexed']\n","assembler = VectorAssembler(inputCols=inputCols, outputCol=\"features\")\n","\n","# MinMaxScaler\n","minmax_scaler = MinMaxScaler(inputCol=\"features\", outputCol=\"features_scaled\")\n","\n","stages = [stringIndexer, imputer, assembler, minmax_scaler]  # 순서 중요"],"execution_count":27,"outputs":[]},{"cell_type":"code","metadata":{"id":"pFZPcnsUWzLV","executionInfo":{"status":"ok","timestamp":1627565212781,"user_tz":-540,"elapsed":292,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}}},"source":["from pyspark.ml.classification import LogisticRegression\n","\n","algo = LogisticRegression(featuresCol=\"features_scaled\", labelCol=\"Survived\")\n","lr_stages = stages + [algo]"],"execution_count":28,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x89uL_TbW1hG","executionInfo":{"status":"ok","timestamp":1627565217245,"user_tz":-540,"elapsed":284,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"5cd753ec-88fb-4c86-986e-11f8417cfb6c"},"source":["lr_stages"],"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[StringIndexer_63a0acf3a46a,\n"," Imputer_611d9d369656,\n"," VectorAssembler_23e37cf37ba1,\n"," MinMaxScaler_96982efeee3a,\n"," LogisticRegression_1078d0487258]"]},"metadata":{"tags":[]},"execution_count":29}]},{"cell_type":"code","metadata":{"id":"A57iMZAxOHyo","executionInfo":{"status":"ok","timestamp":1627565241169,"user_tz":-540,"elapsed":291,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}}},"source":["from pyspark.ml import Pipeline\n","pipeline = Pipeline(stages = lr_stages)"],"execution_count":30,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Io5STglST9rG","executionInfo":{"status":"ok","timestamp":1627565245496,"user_tz":-540,"elapsed":276,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"1ee7ceb5-3a00-4b6e-e762-1c042bb9faac"},"source":["df = data.select(['Survived', 'Pclass', 'Gender', 'Age', 'SibSp', 'Parch', 'Fare'])\n","df.show()"],"execution_count":31,"outputs":[{"output_type":"stream","text":["+--------+------+------+----+-----+-----+-------+\n","|Survived|Pclass|Gender| Age|SibSp|Parch|   Fare|\n","+--------+------+------+----+-----+-----+-------+\n","|       0|     3|  male|22.0|    1|    0|   7.25|\n","|       1|     1|female|38.0|    1|    0|71.2833|\n","|       1|     3|female|26.0|    0|    0|  7.925|\n","|       1|     1|female|35.0|    1|    0|   53.1|\n","|       0|     3|  male|35.0|    0|    0|   8.05|\n","|       0|     3|  male|null|    0|    0| 8.4583|\n","|       0|     1|  male|54.0|    0|    0|51.8625|\n","|       0|     3|  male| 2.0|    3|    1| 21.075|\n","|       1|     3|female|27.0|    0|    2|11.1333|\n","|       1|     2|female|14.0|    1|    0|30.0708|\n","|       1|     3|female| 4.0|    1|    1|   16.7|\n","|       1|     1|female|58.0|    0|    0|  26.55|\n","|       0|     3|  male|20.0|    0|    0|   8.05|\n","|       0|     3|  male|39.0|    1|    5| 31.275|\n","|       0|     3|female|14.0|    0|    0| 7.8542|\n","|       1|     2|female|55.0|    0|    0|   16.0|\n","|       0|     3|  male| 2.0|    4|    1| 29.125|\n","|       1|     2|  male|null|    0|    0|   13.0|\n","|       0|     3|female|31.0|    1|    0|   18.0|\n","|       1|     3|female|null|    0|    0|  7.225|\n","+--------+------+------+----+-----+-----+-------+\n","only showing top 20 rows\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-wULM_P9vpe4","executionInfo":{"status":"ok","timestamp":1627565254492,"user_tz":-540,"elapsed":278,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}}},"source":["train, test = df.randomSplit([0.7, 0.3])"],"execution_count":32,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7Hl1MLmXvS2D","executionInfo":{"status":"ok","timestamp":1627565283499,"user_tz":-540,"elapsed":4240,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"d6a449fe-604b-4b17-e0b0-e1b9870007e9"},"source":["lr_model = pipeline.fit(train)         # 모델 만듦\n","lr_cv_predictions = lr_model.transform(test)\n","evaluator.evaluate(lr_cv_predictions)  # 테스트"],"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8489096573208724"]},"metadata":{"tags":[]},"execution_count":33}]},{"cell_type":"markdown","metadata":{"id":"UJhhv5JlZEav"},"source":["### ML Tuning\n","다양한 파라미터 넣어서 최고의 모델 찾기"]},{"cell_type":"code","metadata":{"id":"PFi81iuQZvsz","executionInfo":{"status":"ok","timestamp":1627565310265,"user_tz":-540,"elapsed":284,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}}},"source":["from pyspark.ml.evaluation import BinaryClassificationEvaluator\n","\n","evaluator = BinaryClassificationEvaluator(labelCol='Survived', metricName='areaUnderROC')"],"execution_count":34,"outputs":[]},{"cell_type":"code","metadata":{"id":"yMHIqd_PVbDO","executionInfo":{"status":"ok","timestamp":1627565338904,"user_tz":-540,"elapsed":288,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}}},"source":["from pyspark.ml.tuning import ParamGridBuilder, CrossValidator\n","\n","paramGrid = (ParamGridBuilder()\n","             .addGrid(algo.maxIter, [1, 5, 10])\n","             .build())\n","\n","cv = CrossValidator(\n","    estimator=pipeline,\n","    estimatorParamMaps=paramGrid,\n","    evaluator=evaluator,\n","    numFolds=5\n",")\n"],"execution_count":35,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LR15O3idaZPy","executionInfo":{"status":"ok","timestamp":1627565382402,"user_tz":-540,"elapsed":30863,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"bfed48f1-083d-4226-b24e-d4e6dfe5fee5"},"source":["# Run cross validations.\n","cvModel = cv.fit(train)\n","lr_cv_predictions = cvModel.transform(test)\n","evaluator.evaluate(lr_cv_predictions)"],"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8468524069828958"]},"metadata":{"tags":[]},"execution_count":37}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eUDNPbwXaqX8","executionInfo":{"status":"ok","timestamp":1627565386523,"user_tz":-540,"elapsed":283,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"09b3f7a8-0eec-44b0-c0c2-78026ed7fa12"},"source":["lr_cv_predictions.select(\"prediction\", \"survived\").show()"],"execution_count":38,"outputs":[{"output_type":"stream","text":["+----------+--------+\n","|prediction|survived|\n","+----------+--------+\n","|       1.0|       0|\n","|       1.0|       0|\n","|       1.0|       0|\n","|       1.0|       0|\n","|       1.0|       0|\n","|       1.0|       0|\n","|       1.0|       0|\n","|       0.0|       0|\n","|       1.0|       0|\n","|       0.0|       0|\n","|       1.0|       0|\n","|       0.0|       0|\n","|       0.0|       0|\n","|       0.0|       0|\n","|       0.0|       0|\n","|       0.0|       0|\n","|       0.0|       0|\n","|       0.0|       0|\n","|       0.0|       0|\n","|       0.0|       0|\n","+----------+--------+\n","only showing top 20 rows\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":142},"id":"-PoqCzfFfLo0","executionInfo":{"status":"ok","timestamp":1627565415016,"user_tz":-540,"elapsed":305,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"02a775bd-83a7-46ac-e1e1-50321546f0da"},"source":["# 최적의 파라미터가 뭔지 확인하는 코드\n","import pandas as pd\n","\n","params = [{p.name: v for p, v in m.items()} for m in cvModel.getEstimatorParamMaps()]\n","pd.DataFrame.from_dict([\n","    {cvModel.getEvaluator().getMetricName(): metric, **ps} \n","    for ps, metric in zip(params, cvModel.avgMetrics)\n","])"],"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>areaUnderROC</th>\n","      <th>maxIter</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.827174</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.842398</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.850705</td>\n","      <td>10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   areaUnderROC  maxIter\n","0      0.827174        1\n","1      0.842398        5\n","2      0.850705       10"]},"metadata":{"tags":[]},"execution_count":39}]},{"cell_type":"markdown","metadata":{"id":"Wa7I6AxEkCLS"},"source":["GBT Classifier"]},{"cell_type":"code","metadata":{"id":"MDSck7Oijf6X","executionInfo":{"status":"ok","timestamp":1627565450034,"user_tz":-540,"elapsed":286,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}}},"source":["from pyspark.ml.classification import GBTClassifier\n","\n","gbt = GBTClassifier(featuresCol=\"features_scaled\", labelCol=\"Survived\")\n","gbt_stages = stages + [gbt]"],"execution_count":40,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uWH4iSGE_LwH","executionInfo":{"status":"ok","timestamp":1627565452053,"user_tz":-540,"elapsed":5,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"297a71f8-4c67-471c-a388-549f8893f334"},"source":["gbt_stages"],"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[StringIndexer_63a0acf3a46a,\n"," Imputer_611d9d369656,\n"," VectorAssembler_23e37cf37ba1,\n"," MinMaxScaler_96982efeee3a,\n"," GBTClassifier_17007f2dcb1b]"]},"metadata":{"tags":[]},"execution_count":41}]},{"cell_type":"code","metadata":{"id":"zsfALF_VlORx","executionInfo":{"status":"ok","timestamp":1627565463228,"user_tz":-540,"elapsed":317,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}}},"source":["from pyspark.ml import Pipeline\n","pipeline = Pipeline(stages = gbt_stages)"],"execution_count":42,"outputs":[]},{"cell_type":"code","metadata":{"id":"Nxp5LL6Fk4nI","executionInfo":{"status":"ok","timestamp":1627565466605,"user_tz":-540,"elapsed":3,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}}},"source":["from pyspark.ml.tuning import ParamGridBuilder, CrossValidator\n","\n","paramGrid = (ParamGridBuilder()\n","             .addGrid(gbt.maxDepth, [2, 4, 6])\n","             .addGrid(gbt.maxBins, [20, 60])\n","             .addGrid(gbt.maxIter, [10, 20])\n","             .build())\n","\n","cv = CrossValidator(\n","    estimator=pipeline,\n","    estimatorParamMaps=paramGrid,\n","    evaluator=evaluator,\n","    numFolds=5\n",")"],"execution_count":43,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nDx7Ui-_la65","executionInfo":{"status":"ok","timestamp":1627565722978,"user_tz":-540,"elapsed":255659,"user":{"displayName":"Yoosun Nam","photoUrl":"","userId":"12428525429141467793"}},"outputId":"513f88a6-3190-4aee-ee59-251582a7a204"},"source":["# Run cross validations.\n","cvModel = cv.fit(train)\n","lr_cv_predictions = cvModel.transform(test)\n","evaluator.evaluate(lr_cv_predictions)"],"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8499088931993185"]},"metadata":{"tags":[]},"execution_count":44}]}]}